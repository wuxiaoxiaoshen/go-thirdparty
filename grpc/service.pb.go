// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service.proto

package nonoapi

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// live_anchors排序规则
type LiveAnchorsSortType int32

const (
	LiveAnchorsSortType_Unused        LiveAnchorsSortType = 0
	LiveAnchorsSortType_LiveStartDesc LiveAnchorsSortType = 1
)

var LiveAnchorsSortType_name = map[int32]string{
	0: "Unused",
	1: "LiveStartDesc",
}

var LiveAnchorsSortType_value = map[string]int32{
	"Unused":        0,
	"LiveStartDesc": 1,
}

func (x LiveAnchorsSortType) String() string {
	return proto.EnumName(LiveAnchorsSortType_name, int32(x))
}

func (LiveAnchorsSortType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{0}
}

type FindLiveAnchorMonthReq struct {
	Page                 int32    `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Limit                int32    `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	StartTime            int64    `protobuf:"varint,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime              int64    `protobuf:"varint,4,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindLiveAnchorMonthReq) Reset()         { *m = FindLiveAnchorMonthReq{} }
func (m *FindLiveAnchorMonthReq) String() string { return proto.CompactTextString(m) }
func (*FindLiveAnchorMonthReq) ProtoMessage()    {}
func (*FindLiveAnchorMonthReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{0}
}

func (m *FindLiveAnchorMonthReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindLiveAnchorMonthReq.Unmarshal(m, b)
}
func (m *FindLiveAnchorMonthReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindLiveAnchorMonthReq.Marshal(b, m, deterministic)
}
func (m *FindLiveAnchorMonthReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindLiveAnchorMonthReq.Merge(m, src)
}
func (m *FindLiveAnchorMonthReq) XXX_Size() int {
	return xxx_messageInfo_FindLiveAnchorMonthReq.Size(m)
}
func (m *FindLiveAnchorMonthReq) XXX_DiscardUnknown() {
	xxx_messageInfo_FindLiveAnchorMonthReq.DiscardUnknown(m)
}

var xxx_messageInfo_FindLiveAnchorMonthReq proto.InternalMessageInfo

func (m *FindLiveAnchorMonthReq) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *FindLiveAnchorMonthReq) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *FindLiveAnchorMonthReq) GetStartTime() int64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *FindLiveAnchorMonthReq) GetEndTime() int64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

type FindLiveAnchorMonthRsp struct {
	UserIds              []int32  `protobuf:"varint,1,rep,packed,name=user_ids,json=userIds,proto3" json:"user_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindLiveAnchorMonthRsp) Reset()         { *m = FindLiveAnchorMonthRsp{} }
func (m *FindLiveAnchorMonthRsp) String() string { return proto.CompactTextString(m) }
func (*FindLiveAnchorMonthRsp) ProtoMessage()    {}
func (*FindLiveAnchorMonthRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{1}
}

func (m *FindLiveAnchorMonthRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindLiveAnchorMonthRsp.Unmarshal(m, b)
}
func (m *FindLiveAnchorMonthRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindLiveAnchorMonthRsp.Marshal(b, m, deterministic)
}
func (m *FindLiveAnchorMonthRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindLiveAnchorMonthRsp.Merge(m, src)
}
func (m *FindLiveAnchorMonthRsp) XXX_Size() int {
	return xxx_messageInfo_FindLiveAnchorMonthRsp.Size(m)
}
func (m *FindLiveAnchorMonthRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_FindLiveAnchorMonthRsp.DiscardUnknown(m)
}

var xxx_messageInfo_FindLiveAnchorMonthRsp proto.InternalMessageInfo

func (m *FindLiveAnchorMonthRsp) GetUserIds() []int32 {
	if m != nil {
		return m.UserIds
	}
	return nil
}

type FindLiveAnchorMonthCountReq struct {
	StartTime            int64    `protobuf:"varint,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime              int64    `protobuf:"varint,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindLiveAnchorMonthCountReq) Reset()         { *m = FindLiveAnchorMonthCountReq{} }
func (m *FindLiveAnchorMonthCountReq) String() string { return proto.CompactTextString(m) }
func (*FindLiveAnchorMonthCountReq) ProtoMessage()    {}
func (*FindLiveAnchorMonthCountReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{2}
}

func (m *FindLiveAnchorMonthCountReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindLiveAnchorMonthCountReq.Unmarshal(m, b)
}
func (m *FindLiveAnchorMonthCountReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindLiveAnchorMonthCountReq.Marshal(b, m, deterministic)
}
func (m *FindLiveAnchorMonthCountReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindLiveAnchorMonthCountReq.Merge(m, src)
}
func (m *FindLiveAnchorMonthCountReq) XXX_Size() int {
	return xxx_messageInfo_FindLiveAnchorMonthCountReq.Size(m)
}
func (m *FindLiveAnchorMonthCountReq) XXX_DiscardUnknown() {
	xxx_messageInfo_FindLiveAnchorMonthCountReq.DiscardUnknown(m)
}

var xxx_messageInfo_FindLiveAnchorMonthCountReq proto.InternalMessageInfo

func (m *FindLiveAnchorMonthCountReq) GetStartTime() int64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *FindLiveAnchorMonthCountReq) GetEndTime() int64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

type FindLiveAnchorMonthCountRsp struct {
	Count                int32    `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindLiveAnchorMonthCountRsp) Reset()         { *m = FindLiveAnchorMonthCountRsp{} }
func (m *FindLiveAnchorMonthCountRsp) String() string { return proto.CompactTextString(m) }
func (*FindLiveAnchorMonthCountRsp) ProtoMessage()    {}
func (*FindLiveAnchorMonthCountRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{3}
}

func (m *FindLiveAnchorMonthCountRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindLiveAnchorMonthCountRsp.Unmarshal(m, b)
}
func (m *FindLiveAnchorMonthCountRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindLiveAnchorMonthCountRsp.Marshal(b, m, deterministic)
}
func (m *FindLiveAnchorMonthCountRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindLiveAnchorMonthCountRsp.Merge(m, src)
}
func (m *FindLiveAnchorMonthCountRsp) XXX_Size() int {
	return xxx_messageInfo_FindLiveAnchorMonthCountRsp.Size(m)
}
func (m *FindLiveAnchorMonthCountRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_FindLiveAnchorMonthCountRsp.DiscardUnknown(m)
}

var xxx_messageInfo_FindLiveAnchorMonthCountRsp proto.InternalMessageInfo

func (m *FindLiveAnchorMonthCountRsp) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type GetLiveAnchorsIdsReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetLiveAnchorsIdsReq) Reset()         { *m = GetLiveAnchorsIdsReq{} }
func (m *GetLiveAnchorsIdsReq) String() string { return proto.CompactTextString(m) }
func (*GetLiveAnchorsIdsReq) ProtoMessage()    {}
func (*GetLiveAnchorsIdsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{4}
}

func (m *GetLiveAnchorsIdsReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLiveAnchorsIdsReq.Unmarshal(m, b)
}
func (m *GetLiveAnchorsIdsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLiveAnchorsIdsReq.Marshal(b, m, deterministic)
}
func (m *GetLiveAnchorsIdsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLiveAnchorsIdsReq.Merge(m, src)
}
func (m *GetLiveAnchorsIdsReq) XXX_Size() int {
	return xxx_messageInfo_GetLiveAnchorsIdsReq.Size(m)
}
func (m *GetLiveAnchorsIdsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLiveAnchorsIdsReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetLiveAnchorsIdsReq proto.InternalMessageInfo

type GetLiveAnchorsIdsRes struct {
	UserIds              []int32  `protobuf:"varint,1,rep,packed,name=user_ids,json=userIds,proto3" json:"user_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetLiveAnchorsIdsRes) Reset()         { *m = GetLiveAnchorsIdsRes{} }
func (m *GetLiveAnchorsIdsRes) String() string { return proto.CompactTextString(m) }
func (*GetLiveAnchorsIdsRes) ProtoMessage()    {}
func (*GetLiveAnchorsIdsRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{5}
}

func (m *GetLiveAnchorsIdsRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLiveAnchorsIdsRes.Unmarshal(m, b)
}
func (m *GetLiveAnchorsIdsRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLiveAnchorsIdsRes.Marshal(b, m, deterministic)
}
func (m *GetLiveAnchorsIdsRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLiveAnchorsIdsRes.Merge(m, src)
}
func (m *GetLiveAnchorsIdsRes) XXX_Size() int {
	return xxx_messageInfo_GetLiveAnchorsIdsRes.Size(m)
}
func (m *GetLiveAnchorsIdsRes) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLiveAnchorsIdsRes.DiscardUnknown(m)
}

var xxx_messageInfo_GetLiveAnchorsIdsRes proto.InternalMessageInfo

func (m *GetLiveAnchorsIdsRes) GetUserIds() []int32 {
	if m != nil {
		return m.UserIds
	}
	return nil
}

type GetLiveAnchorsInfoReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetLiveAnchorsInfoReq) Reset()         { *m = GetLiveAnchorsInfoReq{} }
func (m *GetLiveAnchorsInfoReq) String() string { return proto.CompactTextString(m) }
func (*GetLiveAnchorsInfoReq) ProtoMessage()    {}
func (*GetLiveAnchorsInfoReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{6}
}

func (m *GetLiveAnchorsInfoReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLiveAnchorsInfoReq.Unmarshal(m, b)
}
func (m *GetLiveAnchorsInfoReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLiveAnchorsInfoReq.Marshal(b, m, deterministic)
}
func (m *GetLiveAnchorsInfoReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLiveAnchorsInfoReq.Merge(m, src)
}
func (m *GetLiveAnchorsInfoReq) XXX_Size() int {
	return xxx_messageInfo_GetLiveAnchorsInfoReq.Size(m)
}
func (m *GetLiveAnchorsInfoReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLiveAnchorsInfoReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetLiveAnchorsInfoReq proto.InternalMessageInfo

type GetLiveAnchorsInfoRes struct {
	LiveAnchorsInfo      []*GetLiveAnchorsInfoBody `protobuf:"bytes,1,rep,name=live_anchors_info,json=liveAnchorsInfo,proto3" json:"live_anchors_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *GetLiveAnchorsInfoRes) Reset()         { *m = GetLiveAnchorsInfoRes{} }
func (m *GetLiveAnchorsInfoRes) String() string { return proto.CompactTextString(m) }
func (*GetLiveAnchorsInfoRes) ProtoMessage()    {}
func (*GetLiveAnchorsInfoRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{7}
}

func (m *GetLiveAnchorsInfoRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLiveAnchorsInfoRes.Unmarshal(m, b)
}
func (m *GetLiveAnchorsInfoRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLiveAnchorsInfoRes.Marshal(b, m, deterministic)
}
func (m *GetLiveAnchorsInfoRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLiveAnchorsInfoRes.Merge(m, src)
}
func (m *GetLiveAnchorsInfoRes) XXX_Size() int {
	return xxx_messageInfo_GetLiveAnchorsInfoRes.Size(m)
}
func (m *GetLiveAnchorsInfoRes) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLiveAnchorsInfoRes.DiscardUnknown(m)
}

var xxx_messageInfo_GetLiveAnchorsInfoRes proto.InternalMessageInfo

func (m *GetLiveAnchorsInfoRes) GetLiveAnchorsInfo() []*GetLiveAnchorsInfoBody {
	if m != nil {
		return m.LiveAnchorsInfo
	}
	return nil
}

type GetLiveAnchorsInfoBody struct {
	UserId               int64    `protobuf:"zigzag64,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Viewers              int32    `protobuf:"zigzag32,2,opt,name=viewers,proto3" json:"viewers,omitempty"`
	GameKey              string   `protobuf:"bytes,3,opt,name=game_key,json=gameKey,proto3" json:"game_key,omitempty"`
	LiveStartUnix        int64    `protobuf:"zigzag64,4,opt,name=live_start_unix,json=liveStartUnix,proto3" json:"live_start_unix,omitempty"`
	LiveMode             int32    `protobuf:"zigzag32,5,opt,name=live_mode,json=liveMode,proto3" json:"live_mode,omitempty"`
	LiveType             int32    `protobuf:"zigzag32,6,opt,name=live_type,json=liveType,proto3" json:"live_type,omitempty"`
	LiveSubtype          int32    `protobuf:"zigzag32,7,opt,name=live_subtype,json=liveSubtype,proto3" json:"live_subtype,omitempty"`
	Channels             []string `protobuf:"bytes,8,rep,name=channels,proto3" json:"channels,omitempty"`
	LiveIntro            string   `protobuf:"bytes,9,opt,name=live_intro,json=liveIntro,proto3" json:"live_intro,omitempty"`
	AnchorIntro          string   `protobuf:"bytes,10,opt,name=anchor_intro,json=anchorIntro,proto3" json:"anchor_intro,omitempty"`
	LogId                string   `protobuf:"bytes,11,opt,name=log_id,json=logId,proto3" json:"log_id,omitempty"`
	GameType             string   `protobuf:"bytes,12,opt,name=game_type,json=gameType,proto3" json:"game_type,omitempty"`
	ScreenType           int32    `protobuf:"zigzag32,13,opt,name=screen_type,json=screenType,proto3" json:"screen_type,omitempty"`
	Level                int32    `protobuf:"zigzag32,14,opt,name=level,proto3" json:"level,omitempty"`
	Fans                 int32    `protobuf:"zigzag32,15,opt,name=fans,proto3" json:"fans,omitempty"`
	Exp                  float64  `protobuf:"fixed64,16,opt,name=exp,proto3" json:"exp,omitempty"`
	GameTitle            string   `protobuf:"bytes,17,opt,name=game_title,json=gameTitle,proto3" json:"game_title,omitempty"`
	CertificationIntro   string   `protobuf:"bytes,18,opt,name=certification_intro,json=certificationIntro,proto3" json:"certification_intro,omitempty"`
	AnchorGroup          []string `protobuf:"bytes,19,rep,name=anchor_group,json=anchorGroup,proto3" json:"anchor_group,omitempty"`
	UserName             string   `protobuf:"bytes,20,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	TransferLiveStatus   int32    `protobuf:"zigzag32,21,opt,name=transfer_live_status,json=transferLiveStatus,proto3" json:"transfer_live_status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetLiveAnchorsInfoBody) Reset()         { *m = GetLiveAnchorsInfoBody{} }
func (m *GetLiveAnchorsInfoBody) String() string { return proto.CompactTextString(m) }
func (*GetLiveAnchorsInfoBody) ProtoMessage()    {}
func (*GetLiveAnchorsInfoBody) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{8}
}

func (m *GetLiveAnchorsInfoBody) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLiveAnchorsInfoBody.Unmarshal(m, b)
}
func (m *GetLiveAnchorsInfoBody) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLiveAnchorsInfoBody.Marshal(b, m, deterministic)
}
func (m *GetLiveAnchorsInfoBody) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLiveAnchorsInfoBody.Merge(m, src)
}
func (m *GetLiveAnchorsInfoBody) XXX_Size() int {
	return xxx_messageInfo_GetLiveAnchorsInfoBody.Size(m)
}
func (m *GetLiveAnchorsInfoBody) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLiveAnchorsInfoBody.DiscardUnknown(m)
}

var xxx_messageInfo_GetLiveAnchorsInfoBody proto.InternalMessageInfo

func (m *GetLiveAnchorsInfoBody) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *GetLiveAnchorsInfoBody) GetViewers() int32 {
	if m != nil {
		return m.Viewers
	}
	return 0
}

func (m *GetLiveAnchorsInfoBody) GetGameKey() string {
	if m != nil {
		return m.GameKey
	}
	return ""
}

func (m *GetLiveAnchorsInfoBody) GetLiveStartUnix() int64 {
	if m != nil {
		return m.LiveStartUnix
	}
	return 0
}

func (m *GetLiveAnchorsInfoBody) GetLiveMode() int32 {
	if m != nil {
		return m.LiveMode
	}
	return 0
}

func (m *GetLiveAnchorsInfoBody) GetLiveType() int32 {
	if m != nil {
		return m.LiveType
	}
	return 0
}

func (m *GetLiveAnchorsInfoBody) GetLiveSubtype() int32 {
	if m != nil {
		return m.LiveSubtype
	}
	return 0
}

func (m *GetLiveAnchorsInfoBody) GetChannels() []string {
	if m != nil {
		return m.Channels
	}
	return nil
}

func (m *GetLiveAnchorsInfoBody) GetLiveIntro() string {
	if m != nil {
		return m.LiveIntro
	}
	return ""
}

func (m *GetLiveAnchorsInfoBody) GetAnchorIntro() string {
	if m != nil {
		return m.AnchorIntro
	}
	return ""
}

func (m *GetLiveAnchorsInfoBody) GetLogId() string {
	if m != nil {
		return m.LogId
	}
	return ""
}

func (m *GetLiveAnchorsInfoBody) GetGameType() string {
	if m != nil {
		return m.GameType
	}
	return ""
}

func (m *GetLiveAnchorsInfoBody) GetScreenType() int32 {
	if m != nil {
		return m.ScreenType
	}
	return 0
}

func (m *GetLiveAnchorsInfoBody) GetLevel() int32 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *GetLiveAnchorsInfoBody) GetFans() int32 {
	if m != nil {
		return m.Fans
	}
	return 0
}

func (m *GetLiveAnchorsInfoBody) GetExp() float64 {
	if m != nil {
		return m.Exp
	}
	return 0
}

func (m *GetLiveAnchorsInfoBody) GetGameTitle() string {
	if m != nil {
		return m.GameTitle
	}
	return ""
}

func (m *GetLiveAnchorsInfoBody) GetCertificationIntro() string {
	if m != nil {
		return m.CertificationIntro
	}
	return ""
}

func (m *GetLiveAnchorsInfoBody) GetAnchorGroup() []string {
	if m != nil {
		return m.AnchorGroup
	}
	return nil
}

func (m *GetLiveAnchorsInfoBody) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *GetLiveAnchorsInfoBody) GetTransferLiveStatus() int32 {
	if m != nil {
		return m.TransferLiveStatus
	}
	return 0
}

type FindOneReq struct {
	UserId               int32    `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindOneReq) Reset()         { *m = FindOneReq{} }
func (m *FindOneReq) String() string { return proto.CompactTextString(m) }
func (*FindOneReq) ProtoMessage()    {}
func (*FindOneReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{9}
}

func (m *FindOneReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindOneReq.Unmarshal(m, b)
}
func (m *FindOneReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindOneReq.Marshal(b, m, deterministic)
}
func (m *FindOneReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindOneReq.Merge(m, src)
}
func (m *FindOneReq) XXX_Size() int {
	return xxx_messageInfo_FindOneReq.Size(m)
}
func (m *FindOneReq) XXX_DiscardUnknown() {
	xxx_messageInfo_FindOneReq.DiscardUnknown(m)
}

var xxx_messageInfo_FindOneReq proto.InternalMessageInfo

func (m *FindOneReq) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

type FindOneRes struct {
	Data                 []byte   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindOneRes) Reset()         { *m = FindOneRes{} }
func (m *FindOneRes) String() string { return proto.CompactTextString(m) }
func (*FindOneRes) ProtoMessage()    {}
func (*FindOneRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{10}
}

func (m *FindOneRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindOneRes.Unmarshal(m, b)
}
func (m *FindOneRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindOneRes.Marshal(b, m, deterministic)
}
func (m *FindOneRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindOneRes.Merge(m, src)
}
func (m *FindOneRes) XXX_Size() int {
	return xxx_messageInfo_FindOneRes.Size(m)
}
func (m *FindOneRes) XXX_DiscardUnknown() {
	xxx_messageInfo_FindOneRes.DiscardUnknown(m)
}

var xxx_messageInfo_FindOneRes proto.InternalMessageInfo

func (m *FindOneRes) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type FindListReq struct {
	UserIds              []int32  `protobuf:"varint,1,rep,packed,name=user_ids,json=userIds,proto3" json:"user_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindListReq) Reset()         { *m = FindListReq{} }
func (m *FindListReq) String() string { return proto.CompactTextString(m) }
func (*FindListReq) ProtoMessage()    {}
func (*FindListReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{11}
}

func (m *FindListReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindListReq.Unmarshal(m, b)
}
func (m *FindListReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindListReq.Marshal(b, m, deterministic)
}
func (m *FindListReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindListReq.Merge(m, src)
}
func (m *FindListReq) XXX_Size() int {
	return xxx_messageInfo_FindListReq.Size(m)
}
func (m *FindListReq) XXX_DiscardUnknown() {
	xxx_messageInfo_FindListReq.DiscardUnknown(m)
}

var xxx_messageInfo_FindListReq proto.InternalMessageInfo

func (m *FindListReq) GetUserIds() []int32 {
	if m != nil {
		return m.UserIds
	}
	return nil
}

type FindListRes struct {
	Data                 []byte   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindListRes) Reset()         { *m = FindListRes{} }
func (m *FindListRes) String() string { return proto.CompactTextString(m) }
func (*FindListRes) ProtoMessage()    {}
func (*FindListRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{12}
}

func (m *FindListRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindListRes.Unmarshal(m, b)
}
func (m *FindListRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindListRes.Marshal(b, m, deterministic)
}
func (m *FindListRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindListRes.Merge(m, src)
}
func (m *FindListRes) XXX_Size() int {
	return xxx_messageInfo_FindListRes.Size(m)
}
func (m *FindListRes) XXX_DiscardUnknown() {
	xxx_messageInfo_FindListRes.DiscardUnknown(m)
}

var xxx_messageInfo_FindListRes proto.InternalMessageInfo

func (m *FindListRes) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type UpdateReq struct {
	//查询条件,bson格式
	Query []byte `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	//更新的字段,bson格式
	Update []byte `protobuf:"bytes,2,opt,name=update,proto3" json:"update,omitempty"`
	//是否upsert
	Upsert bool `protobuf:"varint,3,opt,name=upsert,proto3" json:"upsert,omitempty"`
	//是否returnNew
	ReturnNew            bool     `protobuf:"varint,4,opt,name=returnNew,proto3" json:"returnNew,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateReq) Reset()         { *m = UpdateReq{} }
func (m *UpdateReq) String() string { return proto.CompactTextString(m) }
func (*UpdateReq) ProtoMessage()    {}
func (*UpdateReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{13}
}

func (m *UpdateReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateReq.Unmarshal(m, b)
}
func (m *UpdateReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateReq.Marshal(b, m, deterministic)
}
func (m *UpdateReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateReq.Merge(m, src)
}
func (m *UpdateReq) XXX_Size() int {
	return xxx_messageInfo_UpdateReq.Size(m)
}
func (m *UpdateReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateReq proto.InternalMessageInfo

func (m *UpdateReq) GetQuery() []byte {
	if m != nil {
		return m.Query
	}
	return nil
}

func (m *UpdateReq) GetUpdate() []byte {
	if m != nil {
		return m.Update
	}
	return nil
}

func (m *UpdateReq) GetUpsert() bool {
	if m != nil {
		return m.Upsert
	}
	return false
}

func (m *UpdateReq) GetReturnNew() bool {
	if m != nil {
		return m.ReturnNew
	}
	return false
}

type UpdateRes struct {
	Data                 []byte   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateRes) Reset()         { *m = UpdateRes{} }
func (m *UpdateRes) String() string { return proto.CompactTextString(m) }
func (*UpdateRes) ProtoMessage()    {}
func (*UpdateRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{14}
}

func (m *UpdateRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateRes.Unmarshal(m, b)
}
func (m *UpdateRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateRes.Marshal(b, m, deterministic)
}
func (m *UpdateRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateRes.Merge(m, src)
}
func (m *UpdateRes) XXX_Size() int {
	return xxx_messageInfo_UpdateRes.Size(m)
}
func (m *UpdateRes) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateRes.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateRes proto.InternalMessageInfo

func (m *UpdateRes) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type FindRoomDetailReq struct {
	RoomId               int32    `protobuf:"varint,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindRoomDetailReq) Reset()         { *m = FindRoomDetailReq{} }
func (m *FindRoomDetailReq) String() string { return proto.CompactTextString(m) }
func (*FindRoomDetailReq) ProtoMessage()    {}
func (*FindRoomDetailReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{15}
}

func (m *FindRoomDetailReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindRoomDetailReq.Unmarshal(m, b)
}
func (m *FindRoomDetailReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindRoomDetailReq.Marshal(b, m, deterministic)
}
func (m *FindRoomDetailReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindRoomDetailReq.Merge(m, src)
}
func (m *FindRoomDetailReq) XXX_Size() int {
	return xxx_messageInfo_FindRoomDetailReq.Size(m)
}
func (m *FindRoomDetailReq) XXX_DiscardUnknown() {
	xxx_messageInfo_FindRoomDetailReq.DiscardUnknown(m)
}

var xxx_messageInfo_FindRoomDetailReq proto.InternalMessageInfo

func (m *FindRoomDetailReq) GetRoomId() int32 {
	if m != nil {
		return m.RoomId
	}
	return 0
}

type FindRoomDetailRes struct {
	Data                 []byte   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindRoomDetailRes) Reset()         { *m = FindRoomDetailRes{} }
func (m *FindRoomDetailRes) String() string { return proto.CompactTextString(m) }
func (*FindRoomDetailRes) ProtoMessage()    {}
func (*FindRoomDetailRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{16}
}

func (m *FindRoomDetailRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindRoomDetailRes.Unmarshal(m, b)
}
func (m *FindRoomDetailRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindRoomDetailRes.Marshal(b, m, deterministic)
}
func (m *FindRoomDetailRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindRoomDetailRes.Merge(m, src)
}
func (m *FindRoomDetailRes) XXX_Size() int {
	return xxx_messageInfo_FindRoomDetailRes.Size(m)
}
func (m *FindRoomDetailRes) XXX_DiscardUnknown() {
	xxx_messageInfo_FindRoomDetailRes.DiscardUnknown(m)
}

var xxx_messageInfo_FindRoomDetailRes proto.InternalMessageInfo

func (m *FindRoomDetailRes) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type FindRoomDetailsReq struct {
	RoomIds              []int32  `protobuf:"varint,1,rep,packed,name=room_ids,json=roomIds,proto3" json:"room_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindRoomDetailsReq) Reset()         { *m = FindRoomDetailsReq{} }
func (m *FindRoomDetailsReq) String() string { return proto.CompactTextString(m) }
func (*FindRoomDetailsReq) ProtoMessage()    {}
func (*FindRoomDetailsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{17}
}

func (m *FindRoomDetailsReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindRoomDetailsReq.Unmarshal(m, b)
}
func (m *FindRoomDetailsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindRoomDetailsReq.Marshal(b, m, deterministic)
}
func (m *FindRoomDetailsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindRoomDetailsReq.Merge(m, src)
}
func (m *FindRoomDetailsReq) XXX_Size() int {
	return xxx_messageInfo_FindRoomDetailsReq.Size(m)
}
func (m *FindRoomDetailsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_FindRoomDetailsReq.DiscardUnknown(m)
}

var xxx_messageInfo_FindRoomDetailsReq proto.InternalMessageInfo

func (m *FindRoomDetailsReq) GetRoomIds() []int32 {
	if m != nil {
		return m.RoomIds
	}
	return nil
}

type FindRoomDetailsRes struct {
	Data                 []byte   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindRoomDetailsRes) Reset()         { *m = FindRoomDetailsRes{} }
func (m *FindRoomDetailsRes) String() string { return proto.CompactTextString(m) }
func (*FindRoomDetailsRes) ProtoMessage()    {}
func (*FindRoomDetailsRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{18}
}

func (m *FindRoomDetailsRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindRoomDetailsRes.Unmarshal(m, b)
}
func (m *FindRoomDetailsRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindRoomDetailsRes.Marshal(b, m, deterministic)
}
func (m *FindRoomDetailsRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindRoomDetailsRes.Merge(m, src)
}
func (m *FindRoomDetailsRes) XXX_Size() int {
	return xxx_messageInfo_FindRoomDetailsRes.Size(m)
}
func (m *FindRoomDetailsRes) XXX_DiscardUnknown() {
	xxx_messageInfo_FindRoomDetailsRes.DiscardUnknown(m)
}

var xxx_messageInfo_FindRoomDetailsRes proto.InternalMessageInfo

func (m *FindRoomDetailsRes) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type LiveAnchorStopLiveReq struct {
	HostId               int32    `protobuf:"varint,1,opt,name=host_id,json=hostId,proto3" json:"host_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LiveAnchorStopLiveReq) Reset()         { *m = LiveAnchorStopLiveReq{} }
func (m *LiveAnchorStopLiveReq) String() string { return proto.CompactTextString(m) }
func (*LiveAnchorStopLiveReq) ProtoMessage()    {}
func (*LiveAnchorStopLiveReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{19}
}

func (m *LiveAnchorStopLiveReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LiveAnchorStopLiveReq.Unmarshal(m, b)
}
func (m *LiveAnchorStopLiveReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LiveAnchorStopLiveReq.Marshal(b, m, deterministic)
}
func (m *LiveAnchorStopLiveReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LiveAnchorStopLiveReq.Merge(m, src)
}
func (m *LiveAnchorStopLiveReq) XXX_Size() int {
	return xxx_messageInfo_LiveAnchorStopLiveReq.Size(m)
}
func (m *LiveAnchorStopLiveReq) XXX_DiscardUnknown() {
	xxx_messageInfo_LiveAnchorStopLiveReq.DiscardUnknown(m)
}

var xxx_messageInfo_LiveAnchorStopLiveReq proto.InternalMessageInfo

func (m *LiveAnchorStopLiveReq) GetHostId() int32 {
	if m != nil {
		return m.HostId
	}
	return 0
}

type LiveAnchorStopLiveRes struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LiveAnchorStopLiveRes) Reset()         { *m = LiveAnchorStopLiveRes{} }
func (m *LiveAnchorStopLiveRes) String() string { return proto.CompactTextString(m) }
func (*LiveAnchorStopLiveRes) ProtoMessage()    {}
func (*LiveAnchorStopLiveRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{20}
}

func (m *LiveAnchorStopLiveRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LiveAnchorStopLiveRes.Unmarshal(m, b)
}
func (m *LiveAnchorStopLiveRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LiveAnchorStopLiveRes.Marshal(b, m, deterministic)
}
func (m *LiveAnchorStopLiveRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LiveAnchorStopLiveRes.Merge(m, src)
}
func (m *LiveAnchorStopLiveRes) XXX_Size() int {
	return xxx_messageInfo_LiveAnchorStopLiveRes.Size(m)
}
func (m *LiveAnchorStopLiveRes) XXX_DiscardUnknown() {
	xxx_messageInfo_LiveAnchorStopLiveRes.DiscardUnknown(m)
}

var xxx_messageInfo_LiveAnchorStopLiveRes proto.InternalMessageInfo

func (m *LiveAnchorStopLiveRes) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *LiveAnchorStopLiveRes) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type TransferLivePrepareReq struct {
	HostId               int32    `protobuf:"varint,1,opt,name=host_id,json=hostId,proto3" json:"host_id,omitempty"`
	ToHostId             int32    `protobuf:"varint,2,opt,name=to_host_id,json=toHostId,proto3" json:"to_host_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TransferLivePrepareReq) Reset()         { *m = TransferLivePrepareReq{} }
func (m *TransferLivePrepareReq) String() string { return proto.CompactTextString(m) }
func (*TransferLivePrepareReq) ProtoMessage()    {}
func (*TransferLivePrepareReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{21}
}

func (m *TransferLivePrepareReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransferLivePrepareReq.Unmarshal(m, b)
}
func (m *TransferLivePrepareReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransferLivePrepareReq.Marshal(b, m, deterministic)
}
func (m *TransferLivePrepareReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransferLivePrepareReq.Merge(m, src)
}
func (m *TransferLivePrepareReq) XXX_Size() int {
	return xxx_messageInfo_TransferLivePrepareReq.Size(m)
}
func (m *TransferLivePrepareReq) XXX_DiscardUnknown() {
	xxx_messageInfo_TransferLivePrepareReq.DiscardUnknown(m)
}

var xxx_messageInfo_TransferLivePrepareReq proto.InternalMessageInfo

func (m *TransferLivePrepareReq) GetHostId() int32 {
	if m != nil {
		return m.HostId
	}
	return 0
}

func (m *TransferLivePrepareReq) GetToHostId() int32 {
	if m != nil {
		return m.ToHostId
	}
	return 0
}

type TransferLivePrepareRes struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TransferLivePrepareRes) Reset()         { *m = TransferLivePrepareRes{} }
func (m *TransferLivePrepareRes) String() string { return proto.CompactTextString(m) }
func (*TransferLivePrepareRes) ProtoMessage()    {}
func (*TransferLivePrepareRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{22}
}

func (m *TransferLivePrepareRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransferLivePrepareRes.Unmarshal(m, b)
}
func (m *TransferLivePrepareRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransferLivePrepareRes.Marshal(b, m, deterministic)
}
func (m *TransferLivePrepareRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransferLivePrepareRes.Merge(m, src)
}
func (m *TransferLivePrepareRes) XXX_Size() int {
	return xxx_messageInfo_TransferLivePrepareRes.Size(m)
}
func (m *TransferLivePrepareRes) XXX_DiscardUnknown() {
	xxx_messageInfo_TransferLivePrepareRes.DiscardUnknown(m)
}

var xxx_messageInfo_TransferLivePrepareRes proto.InternalMessageInfo

func (m *TransferLivePrepareRes) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *TransferLivePrepareRes) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type TransferLiveCancelReq struct {
	HostId               int32    `protobuf:"varint,1,opt,name=host_id,json=hostId,proto3" json:"host_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TransferLiveCancelReq) Reset()         { *m = TransferLiveCancelReq{} }
func (m *TransferLiveCancelReq) String() string { return proto.CompactTextString(m) }
func (*TransferLiveCancelReq) ProtoMessage()    {}
func (*TransferLiveCancelReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{23}
}

func (m *TransferLiveCancelReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransferLiveCancelReq.Unmarshal(m, b)
}
func (m *TransferLiveCancelReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransferLiveCancelReq.Marshal(b, m, deterministic)
}
func (m *TransferLiveCancelReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransferLiveCancelReq.Merge(m, src)
}
func (m *TransferLiveCancelReq) XXX_Size() int {
	return xxx_messageInfo_TransferLiveCancelReq.Size(m)
}
func (m *TransferLiveCancelReq) XXX_DiscardUnknown() {
	xxx_messageInfo_TransferLiveCancelReq.DiscardUnknown(m)
}

var xxx_messageInfo_TransferLiveCancelReq proto.InternalMessageInfo

func (m *TransferLiveCancelReq) GetHostId() int32 {
	if m != nil {
		return m.HostId
	}
	return 0
}

type TransferLiveCancelRes struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TransferLiveCancelRes) Reset()         { *m = TransferLiveCancelRes{} }
func (m *TransferLiveCancelRes) String() string { return proto.CompactTextString(m) }
func (*TransferLiveCancelRes) ProtoMessage()    {}
func (*TransferLiveCancelRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{24}
}

func (m *TransferLiveCancelRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransferLiveCancelRes.Unmarshal(m, b)
}
func (m *TransferLiveCancelRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransferLiveCancelRes.Marshal(b, m, deterministic)
}
func (m *TransferLiveCancelRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransferLiveCancelRes.Merge(m, src)
}
func (m *TransferLiveCancelRes) XXX_Size() int {
	return xxx_messageInfo_TransferLiveCancelRes.Size(m)
}
func (m *TransferLiveCancelRes) XXX_DiscardUnknown() {
	xxx_messageInfo_TransferLiveCancelRes.DiscardUnknown(m)
}

var xxx_messageInfo_TransferLiveCancelRes proto.InternalMessageInfo

func (m *TransferLiveCancelRes) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *TransferLiveCancelRes) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type TransferLiveStartReq struct {
	HostId               int32    `protobuf:"varint,1,opt,name=host_id,json=hostId,proto3" json:"host_id,omitempty"`
	ToHostId             int32    `protobuf:"varint,2,opt,name=to_host_id,json=toHostId,proto3" json:"to_host_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TransferLiveStartReq) Reset()         { *m = TransferLiveStartReq{} }
func (m *TransferLiveStartReq) String() string { return proto.CompactTextString(m) }
func (*TransferLiveStartReq) ProtoMessage()    {}
func (*TransferLiveStartReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{25}
}

func (m *TransferLiveStartReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransferLiveStartReq.Unmarshal(m, b)
}
func (m *TransferLiveStartReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransferLiveStartReq.Marshal(b, m, deterministic)
}
func (m *TransferLiveStartReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransferLiveStartReq.Merge(m, src)
}
func (m *TransferLiveStartReq) XXX_Size() int {
	return xxx_messageInfo_TransferLiveStartReq.Size(m)
}
func (m *TransferLiveStartReq) XXX_DiscardUnknown() {
	xxx_messageInfo_TransferLiveStartReq.DiscardUnknown(m)
}

var xxx_messageInfo_TransferLiveStartReq proto.InternalMessageInfo

func (m *TransferLiveStartReq) GetHostId() int32 {
	if m != nil {
		return m.HostId
	}
	return 0
}

func (m *TransferLiveStartReq) GetToHostId() int32 {
	if m != nil {
		return m.ToHostId
	}
	return 0
}

type TransferLiveStartRes struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TransferLiveStartRes) Reset()         { *m = TransferLiveStartRes{} }
func (m *TransferLiveStartRes) String() string { return proto.CompactTextString(m) }
func (*TransferLiveStartRes) ProtoMessage()    {}
func (*TransferLiveStartRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{26}
}

func (m *TransferLiveStartRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransferLiveStartRes.Unmarshal(m, b)
}
func (m *TransferLiveStartRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransferLiveStartRes.Marshal(b, m, deterministic)
}
func (m *TransferLiveStartRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransferLiveStartRes.Merge(m, src)
}
func (m *TransferLiveStartRes) XXX_Size() int {
	return xxx_messageInfo_TransferLiveStartRes.Size(m)
}
func (m *TransferLiveStartRes) XXX_DiscardUnknown() {
	xxx_messageInfo_TransferLiveStartRes.DiscardUnknown(m)
}

var xxx_messageInfo_TransferLiveStartRes proto.InternalMessageInfo

func (m *TransferLiveStartRes) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *TransferLiveStartRes) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type TransferLiveStopReq struct {
	HostId               int32    `protobuf:"varint,1,opt,name=host_id,json=hostId,proto3" json:"host_id,omitempty"`
	StopType             int32    `protobuf:"varint,2,opt,name=stop_type,json=stopType,proto3" json:"stop_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TransferLiveStopReq) Reset()         { *m = TransferLiveStopReq{} }
func (m *TransferLiveStopReq) String() string { return proto.CompactTextString(m) }
func (*TransferLiveStopReq) ProtoMessage()    {}
func (*TransferLiveStopReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{27}
}

func (m *TransferLiveStopReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransferLiveStopReq.Unmarshal(m, b)
}
func (m *TransferLiveStopReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransferLiveStopReq.Marshal(b, m, deterministic)
}
func (m *TransferLiveStopReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransferLiveStopReq.Merge(m, src)
}
func (m *TransferLiveStopReq) XXX_Size() int {
	return xxx_messageInfo_TransferLiveStopReq.Size(m)
}
func (m *TransferLiveStopReq) XXX_DiscardUnknown() {
	xxx_messageInfo_TransferLiveStopReq.DiscardUnknown(m)
}

var xxx_messageInfo_TransferLiveStopReq proto.InternalMessageInfo

func (m *TransferLiveStopReq) GetHostId() int32 {
	if m != nil {
		return m.HostId
	}
	return 0
}

func (m *TransferLiveStopReq) GetStopType() int32 {
	if m != nil {
		return m.StopType
	}
	return 0
}

type TransferLiveStopRes struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TransferLiveStopRes) Reset()         { *m = TransferLiveStopRes{} }
func (m *TransferLiveStopRes) String() string { return proto.CompactTextString(m) }
func (*TransferLiveStopRes) ProtoMessage()    {}
func (*TransferLiveStopRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{28}
}

func (m *TransferLiveStopRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransferLiveStopRes.Unmarshal(m, b)
}
func (m *TransferLiveStopRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransferLiveStopRes.Marshal(b, m, deterministic)
}
func (m *TransferLiveStopRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransferLiveStopRes.Merge(m, src)
}
func (m *TransferLiveStopRes) XXX_Size() int {
	return xxx_messageInfo_TransferLiveStopRes.Size(m)
}
func (m *TransferLiveStopRes) XXX_DiscardUnknown() {
	xxx_messageInfo_TransferLiveStopRes.DiscardUnknown(m)
}

var xxx_messageInfo_TransferLiveStopRes proto.InternalMessageInfo

func (m *TransferLiveStopRes) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *TransferLiveStopRes) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type TransferLiveStatusReq struct {
	HostId               int32    `protobuf:"varint,1,opt,name=host_id,json=hostId,proto3" json:"host_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TransferLiveStatusReq) Reset()         { *m = TransferLiveStatusReq{} }
func (m *TransferLiveStatusReq) String() string { return proto.CompactTextString(m) }
func (*TransferLiveStatusReq) ProtoMessage()    {}
func (*TransferLiveStatusReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{29}
}

func (m *TransferLiveStatusReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransferLiveStatusReq.Unmarshal(m, b)
}
func (m *TransferLiveStatusReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransferLiveStatusReq.Marshal(b, m, deterministic)
}
func (m *TransferLiveStatusReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransferLiveStatusReq.Merge(m, src)
}
func (m *TransferLiveStatusReq) XXX_Size() int {
	return xxx_messageInfo_TransferLiveStatusReq.Size(m)
}
func (m *TransferLiveStatusReq) XXX_DiscardUnknown() {
	xxx_messageInfo_TransferLiveStatusReq.DiscardUnknown(m)
}

var xxx_messageInfo_TransferLiveStatusReq proto.InternalMessageInfo

func (m *TransferLiveStatusReq) GetHostId() int32 {
	if m != nil {
		return m.HostId
	}
	return 0
}

type TransferLiveStatusRes struct {
	Result               *PbTransferLive `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TransferLiveStatusRes) Reset()         { *m = TransferLiveStatusRes{} }
func (m *TransferLiveStatusRes) String() string { return proto.CompactTextString(m) }
func (*TransferLiveStatusRes) ProtoMessage()    {}
func (*TransferLiveStatusRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{30}
}

func (m *TransferLiveStatusRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransferLiveStatusRes.Unmarshal(m, b)
}
func (m *TransferLiveStatusRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransferLiveStatusRes.Marshal(b, m, deterministic)
}
func (m *TransferLiveStatusRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransferLiveStatusRes.Merge(m, src)
}
func (m *TransferLiveStatusRes) XXX_Size() int {
	return xxx_messageInfo_TransferLiveStatusRes.Size(m)
}
func (m *TransferLiveStatusRes) XXX_DiscardUnknown() {
	xxx_messageInfo_TransferLiveStatusRes.DiscardUnknown(m)
}

var xxx_messageInfo_TransferLiveStatusRes proto.InternalMessageInfo

func (m *TransferLiveStatusRes) GetResult() *PbTransferLive {
	if m != nil {
		return m.Result
	}
	return nil
}

type PbTransferLive struct {
	HostId               int32    `protobuf:"varint,1,opt,name=host_id,json=hostId,proto3" json:"host_id,omitempty"`
	ToHostId             int32    `protobuf:"varint,2,opt,name=to_host_id,json=toHostId,proto3" json:"to_host_id,omitempty"`
	TransferLiveStatus   int32    `protobuf:"varint,3,opt,name=transfer_live_status,json=transferLiveStatus,proto3" json:"transfer_live_status,omitempty"`
	IsEnd                int32    `protobuf:"varint,4,opt,name=is_end,json=isEnd,proto3" json:"is_end,omitempty"`
	CreateAtUnix         int32    `protobuf:"varint,5,opt,name=create_at_unix,json=createAtUnix,proto3" json:"create_at_unix,omitempty"`
	ObjectIdHex          string   `protobuf:"bytes,6,opt,name=object_id_hex,json=objectIdHex,proto3" json:"object_id_hex,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PbTransferLive) Reset()         { *m = PbTransferLive{} }
func (m *PbTransferLive) String() string { return proto.CompactTextString(m) }
func (*PbTransferLive) ProtoMessage()    {}
func (*PbTransferLive) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{31}
}

func (m *PbTransferLive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PbTransferLive.Unmarshal(m, b)
}
func (m *PbTransferLive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PbTransferLive.Marshal(b, m, deterministic)
}
func (m *PbTransferLive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PbTransferLive.Merge(m, src)
}
func (m *PbTransferLive) XXX_Size() int {
	return xxx_messageInfo_PbTransferLive.Size(m)
}
func (m *PbTransferLive) XXX_DiscardUnknown() {
	xxx_messageInfo_PbTransferLive.DiscardUnknown(m)
}

var xxx_messageInfo_PbTransferLive proto.InternalMessageInfo

func (m *PbTransferLive) GetHostId() int32 {
	if m != nil {
		return m.HostId
	}
	return 0
}

func (m *PbTransferLive) GetToHostId() int32 {
	if m != nil {
		return m.ToHostId
	}
	return 0
}

func (m *PbTransferLive) GetTransferLiveStatus() int32 {
	if m != nil {
		return m.TransferLiveStatus
	}
	return 0
}

func (m *PbTransferLive) GetIsEnd() int32 {
	if m != nil {
		return m.IsEnd
	}
	return 0
}

func (m *PbTransferLive) GetCreateAtUnix() int32 {
	if m != nil {
		return m.CreateAtUnix
	}
	return 0
}

func (m *PbTransferLive) GetObjectIdHex() string {
	if m != nil {
		return m.ObjectIdHex
	}
	return ""
}

type TransferLiveJoinReq struct {
	HostId               int32    `protobuf:"varint,1,opt,name=host_id,json=hostId,proto3" json:"host_id,omitempty"`
	UserId               int32    `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Status               int32    `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TransferLiveJoinReq) Reset()         { *m = TransferLiveJoinReq{} }
func (m *TransferLiveJoinReq) String() string { return proto.CompactTextString(m) }
func (*TransferLiveJoinReq) ProtoMessage()    {}
func (*TransferLiveJoinReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{32}
}

func (m *TransferLiveJoinReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransferLiveJoinReq.Unmarshal(m, b)
}
func (m *TransferLiveJoinReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransferLiveJoinReq.Marshal(b, m, deterministic)
}
func (m *TransferLiveJoinReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransferLiveJoinReq.Merge(m, src)
}
func (m *TransferLiveJoinReq) XXX_Size() int {
	return xxx_messageInfo_TransferLiveJoinReq.Size(m)
}
func (m *TransferLiveJoinReq) XXX_DiscardUnknown() {
	xxx_messageInfo_TransferLiveJoinReq.DiscardUnknown(m)
}

var xxx_messageInfo_TransferLiveJoinReq proto.InternalMessageInfo

func (m *TransferLiveJoinReq) GetHostId() int32 {
	if m != nil {
		return m.HostId
	}
	return 0
}

func (m *TransferLiveJoinReq) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *TransferLiveJoinReq) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

type TransferLiveJoinRes struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TransferLiveJoinRes) Reset()         { *m = TransferLiveJoinRes{} }
func (m *TransferLiveJoinRes) String() string { return proto.CompactTextString(m) }
func (*TransferLiveJoinRes) ProtoMessage()    {}
func (*TransferLiveJoinRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{33}
}

func (m *TransferLiveJoinRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransferLiveJoinRes.Unmarshal(m, b)
}
func (m *TransferLiveJoinRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransferLiveJoinRes.Marshal(b, m, deterministic)
}
func (m *TransferLiveJoinRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransferLiveJoinRes.Merge(m, src)
}
func (m *TransferLiveJoinRes) XXX_Size() int {
	return xxx_messageInfo_TransferLiveJoinRes.Size(m)
}
func (m *TransferLiveJoinRes) XXX_DiscardUnknown() {
	xxx_messageInfo_TransferLiveJoinRes.DiscardUnknown(m)
}

var xxx_messageInfo_TransferLiveJoinRes proto.InternalMessageInfo

func (m *TransferLiveJoinRes) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *TransferLiveJoinRes) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type GetAllTransferLivesReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAllTransferLivesReq) Reset()         { *m = GetAllTransferLivesReq{} }
func (m *GetAllTransferLivesReq) String() string { return proto.CompactTextString(m) }
func (*GetAllTransferLivesReq) ProtoMessage()    {}
func (*GetAllTransferLivesReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{34}
}

func (m *GetAllTransferLivesReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllTransferLivesReq.Unmarshal(m, b)
}
func (m *GetAllTransferLivesReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllTransferLivesReq.Marshal(b, m, deterministic)
}
func (m *GetAllTransferLivesReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllTransferLivesReq.Merge(m, src)
}
func (m *GetAllTransferLivesReq) XXX_Size() int {
	return xxx_messageInfo_GetAllTransferLivesReq.Size(m)
}
func (m *GetAllTransferLivesReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllTransferLivesReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllTransferLivesReq proto.InternalMessageInfo

type GetAllTransferLivesRes struct {
	Result               []*PbTransferLive `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GetAllTransferLivesRes) Reset()         { *m = GetAllTransferLivesRes{} }
func (m *GetAllTransferLivesRes) String() string { return proto.CompactTextString(m) }
func (*GetAllTransferLivesRes) ProtoMessage()    {}
func (*GetAllTransferLivesRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{35}
}

func (m *GetAllTransferLivesRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllTransferLivesRes.Unmarshal(m, b)
}
func (m *GetAllTransferLivesRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllTransferLivesRes.Marshal(b, m, deterministic)
}
func (m *GetAllTransferLivesRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllTransferLivesRes.Merge(m, src)
}
func (m *GetAllTransferLivesRes) XXX_Size() int {
	return xxx_messageInfo_GetAllTransferLivesRes.Size(m)
}
func (m *GetAllTransferLivesRes) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllTransferLivesRes.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllTransferLivesRes proto.InternalMessageInfo

func (m *GetAllTransferLivesRes) GetResult() []*PbTransferLive {
	if m != nil {
		return m.Result
	}
	return nil
}

type GetAllPrepareTransferLivesReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAllPrepareTransferLivesReq) Reset()         { *m = GetAllPrepareTransferLivesReq{} }
func (m *GetAllPrepareTransferLivesReq) String() string { return proto.CompactTextString(m) }
func (*GetAllPrepareTransferLivesReq) ProtoMessage()    {}
func (*GetAllPrepareTransferLivesReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{36}
}

func (m *GetAllPrepareTransferLivesReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllPrepareTransferLivesReq.Unmarshal(m, b)
}
func (m *GetAllPrepareTransferLivesReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllPrepareTransferLivesReq.Marshal(b, m, deterministic)
}
func (m *GetAllPrepareTransferLivesReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllPrepareTransferLivesReq.Merge(m, src)
}
func (m *GetAllPrepareTransferLivesReq) XXX_Size() int {
	return xxx_messageInfo_GetAllPrepareTransferLivesReq.Size(m)
}
func (m *GetAllPrepareTransferLivesReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllPrepareTransferLivesReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllPrepareTransferLivesReq proto.InternalMessageInfo

type GetAllPrepareTransferLivesRes struct {
	Result               []*PbTransferLive `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GetAllPrepareTransferLivesRes) Reset()         { *m = GetAllPrepareTransferLivesRes{} }
func (m *GetAllPrepareTransferLivesRes) String() string { return proto.CompactTextString(m) }
func (*GetAllPrepareTransferLivesRes) ProtoMessage()    {}
func (*GetAllPrepareTransferLivesRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{37}
}

func (m *GetAllPrepareTransferLivesRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllPrepareTransferLivesRes.Unmarshal(m, b)
}
func (m *GetAllPrepareTransferLivesRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllPrepareTransferLivesRes.Marshal(b, m, deterministic)
}
func (m *GetAllPrepareTransferLivesRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllPrepareTransferLivesRes.Merge(m, src)
}
func (m *GetAllPrepareTransferLivesRes) XXX_Size() int {
	return xxx_messageInfo_GetAllPrepareTransferLivesRes.Size(m)
}
func (m *GetAllPrepareTransferLivesRes) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllPrepareTransferLivesRes.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllPrepareTransferLivesRes proto.InternalMessageInfo

func (m *GetAllPrepareTransferLivesRes) GetResult() []*PbTransferLive {
	if m != nil {
		return m.Result
	}
	return nil
}

type GetAllToHostTransferLivesReq struct {
	ToHostId             int32    `protobuf:"varint,1,opt,name=to_host_id,json=toHostId,proto3" json:"to_host_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAllToHostTransferLivesReq) Reset()         { *m = GetAllToHostTransferLivesReq{} }
func (m *GetAllToHostTransferLivesReq) String() string { return proto.CompactTextString(m) }
func (*GetAllToHostTransferLivesReq) ProtoMessage()    {}
func (*GetAllToHostTransferLivesReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{38}
}

func (m *GetAllToHostTransferLivesReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllToHostTransferLivesReq.Unmarshal(m, b)
}
func (m *GetAllToHostTransferLivesReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllToHostTransferLivesReq.Marshal(b, m, deterministic)
}
func (m *GetAllToHostTransferLivesReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllToHostTransferLivesReq.Merge(m, src)
}
func (m *GetAllToHostTransferLivesReq) XXX_Size() int {
	return xxx_messageInfo_GetAllToHostTransferLivesReq.Size(m)
}
func (m *GetAllToHostTransferLivesReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllToHostTransferLivesReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllToHostTransferLivesReq proto.InternalMessageInfo

func (m *GetAllToHostTransferLivesReq) GetToHostId() int32 {
	if m != nil {
		return m.ToHostId
	}
	return 0
}

type GetAllToHostTransferLivesRes struct {
	Result               []*PbTransferLive `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GetAllToHostTransferLivesRes) Reset()         { *m = GetAllToHostTransferLivesRes{} }
func (m *GetAllToHostTransferLivesRes) String() string { return proto.CompactTextString(m) }
func (*GetAllToHostTransferLivesRes) ProtoMessage()    {}
func (*GetAllToHostTransferLivesRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{39}
}

func (m *GetAllToHostTransferLivesRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllToHostTransferLivesRes.Unmarshal(m, b)
}
func (m *GetAllToHostTransferLivesRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllToHostTransferLivesRes.Marshal(b, m, deterministic)
}
func (m *GetAllToHostTransferLivesRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllToHostTransferLivesRes.Merge(m, src)
}
func (m *GetAllToHostTransferLivesRes) XXX_Size() int {
	return xxx_messageInfo_GetAllToHostTransferLivesRes.Size(m)
}
func (m *GetAllToHostTransferLivesRes) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllToHostTransferLivesRes.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllToHostTransferLivesRes proto.InternalMessageInfo

func (m *GetAllToHostTransferLivesRes) GetResult() []*PbTransferLive {
	if m != nil {
		return m.Result
	}
	return nil
}

type GetLiveAnchorsWithCacheReq struct {
	SortType             LiveAnchorsSortType `protobuf:"varint,1,opt,name=SortType,proto3,enum=nonoapi.LiveAnchorsSortType" json:"SortType,omitempty"`
	WithinUidList        []int64             `protobuf:"varint,2,rep,packed,name=WithinUidList,proto3" json:"WithinUidList,omitempty"`
	WithoutUidList       []int64             `protobuf:"varint,3,rep,packed,name=WithoutUidList,proto3" json:"WithoutUidList,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *GetLiveAnchorsWithCacheReq) Reset()         { *m = GetLiveAnchorsWithCacheReq{} }
func (m *GetLiveAnchorsWithCacheReq) String() string { return proto.CompactTextString(m) }
func (*GetLiveAnchorsWithCacheReq) ProtoMessage()    {}
func (*GetLiveAnchorsWithCacheReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{40}
}

func (m *GetLiveAnchorsWithCacheReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLiveAnchorsWithCacheReq.Unmarshal(m, b)
}
func (m *GetLiveAnchorsWithCacheReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLiveAnchorsWithCacheReq.Marshal(b, m, deterministic)
}
func (m *GetLiveAnchorsWithCacheReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLiveAnchorsWithCacheReq.Merge(m, src)
}
func (m *GetLiveAnchorsWithCacheReq) XXX_Size() int {
	return xxx_messageInfo_GetLiveAnchorsWithCacheReq.Size(m)
}
func (m *GetLiveAnchorsWithCacheReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLiveAnchorsWithCacheReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetLiveAnchorsWithCacheReq proto.InternalMessageInfo

func (m *GetLiveAnchorsWithCacheReq) GetSortType() LiveAnchorsSortType {
	if m != nil {
		return m.SortType
	}
	return LiveAnchorsSortType_Unused
}

func (m *GetLiveAnchorsWithCacheReq) GetWithinUidList() []int64 {
	if m != nil {
		return m.WithinUidList
	}
	return nil
}

func (m *GetLiveAnchorsWithCacheReq) GetWithoutUidList() []int64 {
	if m != nil {
		return m.WithoutUidList
	}
	return nil
}

type GetLiveAnchorsWithCacheRes struct {
	Data                 []byte   `protobuf:"bytes,1,opt,name=Data,proto3" json:"Data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetLiveAnchorsWithCacheRes) Reset()         { *m = GetLiveAnchorsWithCacheRes{} }
func (m *GetLiveAnchorsWithCacheRes) String() string { return proto.CompactTextString(m) }
func (*GetLiveAnchorsWithCacheRes) ProtoMessage()    {}
func (*GetLiveAnchorsWithCacheRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{41}
}

func (m *GetLiveAnchorsWithCacheRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLiveAnchorsWithCacheRes.Unmarshal(m, b)
}
func (m *GetLiveAnchorsWithCacheRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLiveAnchorsWithCacheRes.Marshal(b, m, deterministic)
}
func (m *GetLiveAnchorsWithCacheRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLiveAnchorsWithCacheRes.Merge(m, src)
}
func (m *GetLiveAnchorsWithCacheRes) XXX_Size() int {
	return xxx_messageInfo_GetLiveAnchorsWithCacheRes.Size(m)
}
func (m *GetLiveAnchorsWithCacheRes) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLiveAnchorsWithCacheRes.DiscardUnknown(m)
}

var xxx_messageInfo_GetLiveAnchorsWithCacheRes proto.InternalMessageInfo

func (m *GetLiveAnchorsWithCacheRes) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

// 主播开播通知请求
type StartLiveRequest struct {
	Data                 []byte   `protobuf:"bytes,1,opt,name=Data,proto3" json:"Data,omitempty"`
	UserId               int32    `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartLiveRequest) Reset()         { *m = StartLiveRequest{} }
func (m *StartLiveRequest) String() string { return proto.CompactTextString(m) }
func (*StartLiveRequest) ProtoMessage()    {}
func (*StartLiveRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{42}
}

func (m *StartLiveRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartLiveRequest.Unmarshal(m, b)
}
func (m *StartLiveRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartLiveRequest.Marshal(b, m, deterministic)
}
func (m *StartLiveRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartLiveRequest.Merge(m, src)
}
func (m *StartLiveRequest) XXX_Size() int {
	return xxx_messageInfo_StartLiveRequest.Size(m)
}
func (m *StartLiveRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StartLiveRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StartLiveRequest proto.InternalMessageInfo

func (m *StartLiveRequest) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *StartLiveRequest) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

// 主播开播通知响应
type StartLiveResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartLiveResponse) Reset()         { *m = StartLiveResponse{} }
func (m *StartLiveResponse) String() string { return proto.CompactTextString(m) }
func (*StartLiveResponse) ProtoMessage()    {}
func (*StartLiveResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{43}
}

func (m *StartLiveResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartLiveResponse.Unmarshal(m, b)
}
func (m *StartLiveResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartLiveResponse.Marshal(b, m, deterministic)
}
func (m *StartLiveResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartLiveResponse.Merge(m, src)
}
func (m *StartLiveResponse) XXX_Size() int {
	return xxx_messageInfo_StartLiveResponse.Size(m)
}
func (m *StartLiveResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StartLiveResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StartLiveResponse proto.InternalMessageInfo

// 主播停播通知请求
type StopLiveRequest struct {
	UserId               uint64   `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StopLiveRequest) Reset()         { *m = StopLiveRequest{} }
func (m *StopLiveRequest) String() string { return proto.CompactTextString(m) }
func (*StopLiveRequest) ProtoMessage()    {}
func (*StopLiveRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{44}
}

func (m *StopLiveRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopLiveRequest.Unmarshal(m, b)
}
func (m *StopLiveRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopLiveRequest.Marshal(b, m, deterministic)
}
func (m *StopLiveRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopLiveRequest.Merge(m, src)
}
func (m *StopLiveRequest) XXX_Size() int {
	return xxx_messageInfo_StopLiveRequest.Size(m)
}
func (m *StopLiveRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StopLiveRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StopLiveRequest proto.InternalMessageInfo

func (m *StopLiveRequest) GetUserId() uint64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

// 主播停播通知响应
type StopLiveResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StopLiveResponse) Reset()         { *m = StopLiveResponse{} }
func (m *StopLiveResponse) String() string { return proto.CompactTextString(m) }
func (*StopLiveResponse) ProtoMessage()    {}
func (*StopLiveResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{45}
}

func (m *StopLiveResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopLiveResponse.Unmarshal(m, b)
}
func (m *StopLiveResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopLiveResponse.Marshal(b, m, deterministic)
}
func (m *StopLiveResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopLiveResponse.Merge(m, src)
}
func (m *StopLiveResponse) XXX_Size() int {
	return xxx_messageInfo_StopLiveResponse.Size(m)
}
func (m *StopLiveResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StopLiveResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StopLiveResponse proto.InternalMessageInfo

type RealtimePlaybackOnReq struct {
	HostId               int32    `protobuf:"varint,1,opt,name=host_id,json=hostId,proto3" json:"host_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RealtimePlaybackOnReq) Reset()         { *m = RealtimePlaybackOnReq{} }
func (m *RealtimePlaybackOnReq) String() string { return proto.CompactTextString(m) }
func (*RealtimePlaybackOnReq) ProtoMessage()    {}
func (*RealtimePlaybackOnReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{46}
}

func (m *RealtimePlaybackOnReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RealtimePlaybackOnReq.Unmarshal(m, b)
}
func (m *RealtimePlaybackOnReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RealtimePlaybackOnReq.Marshal(b, m, deterministic)
}
func (m *RealtimePlaybackOnReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RealtimePlaybackOnReq.Merge(m, src)
}
func (m *RealtimePlaybackOnReq) XXX_Size() int {
	return xxx_messageInfo_RealtimePlaybackOnReq.Size(m)
}
func (m *RealtimePlaybackOnReq) XXX_DiscardUnknown() {
	xxx_messageInfo_RealtimePlaybackOnReq.DiscardUnknown(m)
}

var xxx_messageInfo_RealtimePlaybackOnReq proto.InternalMessageInfo

func (m *RealtimePlaybackOnReq) GetHostId() int32 {
	if m != nil {
		return m.HostId
	}
	return 0
}

type RealtimePlaybackOnRsp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RealtimePlaybackOnRsp) Reset()         { *m = RealtimePlaybackOnRsp{} }
func (m *RealtimePlaybackOnRsp) String() string { return proto.CompactTextString(m) }
func (*RealtimePlaybackOnRsp) ProtoMessage()    {}
func (*RealtimePlaybackOnRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{47}
}

func (m *RealtimePlaybackOnRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RealtimePlaybackOnRsp.Unmarshal(m, b)
}
func (m *RealtimePlaybackOnRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RealtimePlaybackOnRsp.Marshal(b, m, deterministic)
}
func (m *RealtimePlaybackOnRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RealtimePlaybackOnRsp.Merge(m, src)
}
func (m *RealtimePlaybackOnRsp) XXX_Size() int {
	return xxx_messageInfo_RealtimePlaybackOnRsp.Size(m)
}
func (m *RealtimePlaybackOnRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_RealtimePlaybackOnRsp.DiscardUnknown(m)
}

var xxx_messageInfo_RealtimePlaybackOnRsp proto.InternalMessageInfo

type RealtimePlaybackOffReq struct {
	UserId               int32    `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	RealtimeVId          string   `protobuf:"bytes,2,opt,name=realtime_v_id,json=realtimeVId,proto3" json:"realtime_v_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RealtimePlaybackOffReq) Reset()         { *m = RealtimePlaybackOffReq{} }
func (m *RealtimePlaybackOffReq) String() string { return proto.CompactTextString(m) }
func (*RealtimePlaybackOffReq) ProtoMessage()    {}
func (*RealtimePlaybackOffReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{48}
}

func (m *RealtimePlaybackOffReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RealtimePlaybackOffReq.Unmarshal(m, b)
}
func (m *RealtimePlaybackOffReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RealtimePlaybackOffReq.Marshal(b, m, deterministic)
}
func (m *RealtimePlaybackOffReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RealtimePlaybackOffReq.Merge(m, src)
}
func (m *RealtimePlaybackOffReq) XXX_Size() int {
	return xxx_messageInfo_RealtimePlaybackOffReq.Size(m)
}
func (m *RealtimePlaybackOffReq) XXX_DiscardUnknown() {
	xxx_messageInfo_RealtimePlaybackOffReq.DiscardUnknown(m)
}

var xxx_messageInfo_RealtimePlaybackOffReq proto.InternalMessageInfo

func (m *RealtimePlaybackOffReq) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *RealtimePlaybackOffReq) GetRealtimeVId() string {
	if m != nil {
		return m.RealtimeVId
	}
	return ""
}

type RealtimePlaybackOffRsp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RealtimePlaybackOffRsp) Reset()         { *m = RealtimePlaybackOffRsp{} }
func (m *RealtimePlaybackOffRsp) String() string { return proto.CompactTextString(m) }
func (*RealtimePlaybackOffRsp) ProtoMessage()    {}
func (*RealtimePlaybackOffRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{49}
}

func (m *RealtimePlaybackOffRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RealtimePlaybackOffRsp.Unmarshal(m, b)
}
func (m *RealtimePlaybackOffRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RealtimePlaybackOffRsp.Marshal(b, m, deterministic)
}
func (m *RealtimePlaybackOffRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RealtimePlaybackOffRsp.Merge(m, src)
}
func (m *RealtimePlaybackOffRsp) XXX_Size() int {
	return xxx_messageInfo_RealtimePlaybackOffRsp.Size(m)
}
func (m *RealtimePlaybackOffRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_RealtimePlaybackOffRsp.DiscardUnknown(m)
}

var xxx_messageInfo_RealtimePlaybackOffRsp proto.InternalMessageInfo

type GetLiveTransportResolutionReq struct {
	RoomId               int32    `protobuf:"varint,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	Pixel                int32    `protobuf:"varint,2,opt,name=pixel,proto3" json:"pixel,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetLiveTransportResolutionReq) Reset()         { *m = GetLiveTransportResolutionReq{} }
func (m *GetLiveTransportResolutionReq) String() string { return proto.CompactTextString(m) }
func (*GetLiveTransportResolutionReq) ProtoMessage()    {}
func (*GetLiveTransportResolutionReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{50}
}

func (m *GetLiveTransportResolutionReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLiveTransportResolutionReq.Unmarshal(m, b)
}
func (m *GetLiveTransportResolutionReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLiveTransportResolutionReq.Marshal(b, m, deterministic)
}
func (m *GetLiveTransportResolutionReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLiveTransportResolutionReq.Merge(m, src)
}
func (m *GetLiveTransportResolutionReq) XXX_Size() int {
	return xxx_messageInfo_GetLiveTransportResolutionReq.Size(m)
}
func (m *GetLiveTransportResolutionReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLiveTransportResolutionReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetLiveTransportResolutionReq proto.InternalMessageInfo

func (m *GetLiveTransportResolutionReq) GetRoomId() int32 {
	if m != nil {
		return m.RoomId
	}
	return 0
}

func (m *GetLiveTransportResolutionReq) GetPixel() int32 {
	if m != nil {
		return m.Pixel
	}
	return 0
}

type GetLiveTransportResolutionRsp struct {
	Data                 []byte   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetLiveTransportResolutionRsp) Reset()         { *m = GetLiveTransportResolutionRsp{} }
func (m *GetLiveTransportResolutionRsp) String() string { return proto.CompactTextString(m) }
func (*GetLiveTransportResolutionRsp) ProtoMessage()    {}
func (*GetLiveTransportResolutionRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{51}
}

func (m *GetLiveTransportResolutionRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLiveTransportResolutionRsp.Unmarshal(m, b)
}
func (m *GetLiveTransportResolutionRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLiveTransportResolutionRsp.Marshal(b, m, deterministic)
}
func (m *GetLiveTransportResolutionRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLiveTransportResolutionRsp.Merge(m, src)
}
func (m *GetLiveTransportResolutionRsp) XXX_Size() int {
	return xxx_messageInfo_GetLiveTransportResolutionRsp.Size(m)
}
func (m *GetLiveTransportResolutionRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLiveTransportResolutionRsp.DiscardUnknown(m)
}

var xxx_messageInfo_GetLiveTransportResolutionRsp proto.InternalMessageInfo

func (m *GetLiveTransportResolutionRsp) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type KickStreamReq struct {
	RoomId               int32    `protobuf:"varint,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	ExpiredStreamKey     bool     `protobuf:"varint,2,opt,name=expired_stream_key,json=expiredStreamKey,proto3" json:"expired_stream_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KickStreamReq) Reset()         { *m = KickStreamReq{} }
func (m *KickStreamReq) String() string { return proto.CompactTextString(m) }
func (*KickStreamReq) ProtoMessage()    {}
func (*KickStreamReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{52}
}

func (m *KickStreamReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KickStreamReq.Unmarshal(m, b)
}
func (m *KickStreamReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KickStreamReq.Marshal(b, m, deterministic)
}
func (m *KickStreamReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KickStreamReq.Merge(m, src)
}
func (m *KickStreamReq) XXX_Size() int {
	return xxx_messageInfo_KickStreamReq.Size(m)
}
func (m *KickStreamReq) XXX_DiscardUnknown() {
	xxx_messageInfo_KickStreamReq.DiscardUnknown(m)
}

var xxx_messageInfo_KickStreamReq proto.InternalMessageInfo

func (m *KickStreamReq) GetRoomId() int32 {
	if m != nil {
		return m.RoomId
	}
	return 0
}

func (m *KickStreamReq) GetExpiredStreamKey() bool {
	if m != nil {
		return m.ExpiredStreamKey
	}
	return false
}

type KickStreamRsp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KickStreamRsp) Reset()         { *m = KickStreamRsp{} }
func (m *KickStreamRsp) String() string { return proto.CompactTextString(m) }
func (*KickStreamRsp) ProtoMessage()    {}
func (*KickStreamRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{53}
}

func (m *KickStreamRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KickStreamRsp.Unmarshal(m, b)
}
func (m *KickStreamRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KickStreamRsp.Marshal(b, m, deterministic)
}
func (m *KickStreamRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KickStreamRsp.Merge(m, src)
}
func (m *KickStreamRsp) XXX_Size() int {
	return xxx_messageInfo_KickStreamRsp.Size(m)
}
func (m *KickStreamRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_KickStreamRsp.DiscardUnknown(m)
}

var xxx_messageInfo_KickStreamRsp proto.InternalMessageInfo

type StartKaraokeRequest struct {
	UserId               int32    `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	SongId               int32    `protobuf:"varint,2,opt,name=song_id,json=songId,proto3" json:"song_id,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Artist               string   `protobuf:"bytes,4,opt,name=artist,proto3" json:"artist,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartKaraokeRequest) Reset()         { *m = StartKaraokeRequest{} }
func (m *StartKaraokeRequest) String() string { return proto.CompactTextString(m) }
func (*StartKaraokeRequest) ProtoMessage()    {}
func (*StartKaraokeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{54}
}

func (m *StartKaraokeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartKaraokeRequest.Unmarshal(m, b)
}
func (m *StartKaraokeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartKaraokeRequest.Marshal(b, m, deterministic)
}
func (m *StartKaraokeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartKaraokeRequest.Merge(m, src)
}
func (m *StartKaraokeRequest) XXX_Size() int {
	return xxx_messageInfo_StartKaraokeRequest.Size(m)
}
func (m *StartKaraokeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StartKaraokeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StartKaraokeRequest proto.InternalMessageInfo

func (m *StartKaraokeRequest) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *StartKaraokeRequest) GetSongId() int32 {
	if m != nil {
		return m.SongId
	}
	return 0
}

func (m *StartKaraokeRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *StartKaraokeRequest) GetArtist() string {
	if m != nil {
		return m.Artist
	}
	return ""
}

type StartKaraokeResponse struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartKaraokeResponse) Reset()         { *m = StartKaraokeResponse{} }
func (m *StartKaraokeResponse) String() string { return proto.CompactTextString(m) }
func (*StartKaraokeResponse) ProtoMessage()    {}
func (*StartKaraokeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{55}
}

func (m *StartKaraokeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartKaraokeResponse.Unmarshal(m, b)
}
func (m *StartKaraokeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartKaraokeResponse.Marshal(b, m, deterministic)
}
func (m *StartKaraokeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartKaraokeResponse.Merge(m, src)
}
func (m *StartKaraokeResponse) XXX_Size() int {
	return xxx_messageInfo_StartKaraokeResponse.Size(m)
}
func (m *StartKaraokeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StartKaraokeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StartKaraokeResponse proto.InternalMessageInfo

func (m *StartKaraokeResponse) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *StartKaraokeResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type StopKaraokeRequest struct {
	UserId               int32    `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StopKaraokeRequest) Reset()         { *m = StopKaraokeRequest{} }
func (m *StopKaraokeRequest) String() string { return proto.CompactTextString(m) }
func (*StopKaraokeRequest) ProtoMessage()    {}
func (*StopKaraokeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{56}
}

func (m *StopKaraokeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopKaraokeRequest.Unmarshal(m, b)
}
func (m *StopKaraokeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopKaraokeRequest.Marshal(b, m, deterministic)
}
func (m *StopKaraokeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopKaraokeRequest.Merge(m, src)
}
func (m *StopKaraokeRequest) XXX_Size() int {
	return xxx_messageInfo_StopKaraokeRequest.Size(m)
}
func (m *StopKaraokeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StopKaraokeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StopKaraokeRequest proto.InternalMessageInfo

func (m *StopKaraokeRequest) GetUserId() int32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

type StopKaraokeResponse struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StopKaraokeResponse) Reset()         { *m = StopKaraokeResponse{} }
func (m *StopKaraokeResponse) String() string { return proto.CompactTextString(m) }
func (*StopKaraokeResponse) ProtoMessage()    {}
func (*StopKaraokeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{57}
}

func (m *StopKaraokeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopKaraokeResponse.Unmarshal(m, b)
}
func (m *StopKaraokeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopKaraokeResponse.Marshal(b, m, deterministic)
}
func (m *StopKaraokeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopKaraokeResponse.Merge(m, src)
}
func (m *StopKaraokeResponse) XXX_Size() int {
	return xxx_messageInfo_StopKaraokeResponse.Size(m)
}
func (m *StopKaraokeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StopKaraokeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StopKaraokeResponse proto.InternalMessageInfo

func (m *StopKaraokeResponse) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *StopKaraokeResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterEnum("nonoapi.LiveAnchorsSortType", LiveAnchorsSortType_name, LiveAnchorsSortType_value)
	proto.RegisterType((*FindLiveAnchorMonthReq)(nil), "nonoapi.FindLiveAnchorMonthReq")
	proto.RegisterType((*FindLiveAnchorMonthRsp)(nil), "nonoapi.FindLiveAnchorMonthRsp")
	proto.RegisterType((*FindLiveAnchorMonthCountReq)(nil), "nonoapi.FindLiveAnchorMonthCountReq")
	proto.RegisterType((*FindLiveAnchorMonthCountRsp)(nil), "nonoapi.FindLiveAnchorMonthCountRsp")
	proto.RegisterType((*GetLiveAnchorsIdsReq)(nil), "nonoapi.GetLiveAnchorsIdsReq")
	proto.RegisterType((*GetLiveAnchorsIdsRes)(nil), "nonoapi.GetLiveAnchorsIdsRes")
	proto.RegisterType((*GetLiveAnchorsInfoReq)(nil), "nonoapi.GetLiveAnchorsInfoReq")
	proto.RegisterType((*GetLiveAnchorsInfoRes)(nil), "nonoapi.GetLiveAnchorsInfoRes")
	proto.RegisterType((*GetLiveAnchorsInfoBody)(nil), "nonoapi.GetLiveAnchorsInfoBody")
	proto.RegisterType((*FindOneReq)(nil), "nonoapi.FindOneReq")
	proto.RegisterType((*FindOneRes)(nil), "nonoapi.FindOneRes")
	proto.RegisterType((*FindListReq)(nil), "nonoapi.FindListReq")
	proto.RegisterType((*FindListRes)(nil), "nonoapi.FindListRes")
	proto.RegisterType((*UpdateReq)(nil), "nonoapi.UpdateReq")
	proto.RegisterType((*UpdateRes)(nil), "nonoapi.UpdateRes")
	proto.RegisterType((*FindRoomDetailReq)(nil), "nonoapi.FindRoomDetailReq")
	proto.RegisterType((*FindRoomDetailRes)(nil), "nonoapi.FindRoomDetailRes")
	proto.RegisterType((*FindRoomDetailsReq)(nil), "nonoapi.FindRoomDetailsReq")
	proto.RegisterType((*FindRoomDetailsRes)(nil), "nonoapi.FindRoomDetailsRes")
	proto.RegisterType((*LiveAnchorStopLiveReq)(nil), "nonoapi.LiveAnchorStopLiveReq")
	proto.RegisterType((*LiveAnchorStopLiveRes)(nil), "nonoapi.LiveAnchorStopLiveRes")
	proto.RegisterType((*TransferLivePrepareReq)(nil), "nonoapi.TransferLivePrepareReq")
	proto.RegisterType((*TransferLivePrepareRes)(nil), "nonoapi.TransferLivePrepareRes")
	proto.RegisterType((*TransferLiveCancelReq)(nil), "nonoapi.TransferLiveCancelReq")
	proto.RegisterType((*TransferLiveCancelRes)(nil), "nonoapi.TransferLiveCancelRes")
	proto.RegisterType((*TransferLiveStartReq)(nil), "nonoapi.TransferLiveStartReq")
	proto.RegisterType((*TransferLiveStartRes)(nil), "nonoapi.TransferLiveStartRes")
	proto.RegisterType((*TransferLiveStopReq)(nil), "nonoapi.TransferLiveStopReq")
	proto.RegisterType((*TransferLiveStopRes)(nil), "nonoapi.TransferLiveStopRes")
	proto.RegisterType((*TransferLiveStatusReq)(nil), "nonoapi.TransferLiveStatusReq")
	proto.RegisterType((*TransferLiveStatusRes)(nil), "nonoapi.TransferLiveStatusRes")
	proto.RegisterType((*PbTransferLive)(nil), "nonoapi.PbTransferLive")
	proto.RegisterType((*TransferLiveJoinReq)(nil), "nonoapi.TransferLiveJoinReq")
	proto.RegisterType((*TransferLiveJoinRes)(nil), "nonoapi.TransferLiveJoinRes")
	proto.RegisterType((*GetAllTransferLivesReq)(nil), "nonoapi.GetAllTransferLivesReq")
	proto.RegisterType((*GetAllTransferLivesRes)(nil), "nonoapi.GetAllTransferLivesRes")
	proto.RegisterType((*GetAllPrepareTransferLivesReq)(nil), "nonoapi.GetAllPrepareTransferLivesReq")
	proto.RegisterType((*GetAllPrepareTransferLivesRes)(nil), "nonoapi.GetAllPrepareTransferLivesRes")
	proto.RegisterType((*GetAllToHostTransferLivesReq)(nil), "nonoapi.GetAllToHostTransferLivesReq")
	proto.RegisterType((*GetAllToHostTransferLivesRes)(nil), "nonoapi.GetAllToHostTransferLivesRes")
	proto.RegisterType((*GetLiveAnchorsWithCacheReq)(nil), "nonoapi.GetLiveAnchorsWithCacheReq")
	proto.RegisterType((*GetLiveAnchorsWithCacheRes)(nil), "nonoapi.GetLiveAnchorsWithCacheRes")
	proto.RegisterType((*StartLiveRequest)(nil), "nonoapi.StartLiveRequest")
	proto.RegisterType((*StartLiveResponse)(nil), "nonoapi.StartLiveResponse")
	proto.RegisterType((*StopLiveRequest)(nil), "nonoapi.StopLiveRequest")
	proto.RegisterType((*StopLiveResponse)(nil), "nonoapi.StopLiveResponse")
	proto.RegisterType((*RealtimePlaybackOnReq)(nil), "nonoapi.RealtimePlaybackOnReq")
	proto.RegisterType((*RealtimePlaybackOnRsp)(nil), "nonoapi.RealtimePlaybackOnRsp")
	proto.RegisterType((*RealtimePlaybackOffReq)(nil), "nonoapi.RealtimePlaybackOffReq")
	proto.RegisterType((*RealtimePlaybackOffRsp)(nil), "nonoapi.RealtimePlaybackOffRsp")
	proto.RegisterType((*GetLiveTransportResolutionReq)(nil), "nonoapi.GetLiveTransportResolutionReq")
	proto.RegisterType((*GetLiveTransportResolutionRsp)(nil), "nonoapi.GetLiveTransportResolutionRsp")
	proto.RegisterType((*KickStreamReq)(nil), "nonoapi.KickStreamReq")
	proto.RegisterType((*KickStreamRsp)(nil), "nonoapi.KickStreamRsp")
	proto.RegisterType((*StartKaraokeRequest)(nil), "nonoapi.StartKaraokeRequest")
	proto.RegisterType((*StartKaraokeResponse)(nil), "nonoapi.StartKaraokeResponse")
	proto.RegisterType((*StopKaraokeRequest)(nil), "nonoapi.StopKaraokeRequest")
	proto.RegisterType((*StopKaraokeResponse)(nil), "nonoapi.StopKaraokeResponse")
}

func init() { proto.RegisterFile("service.proto", fileDescriptor_a0b84a42fa06f626) }

var fileDescriptor_a0b84a42fa06f626 = []byte{
	// 1942 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x59, 0xfd, 0x6e, 0xdb, 0xc8,
	0x11, 0xaf, 0xac, 0xc8, 0x92, 0x46, 0xfe, 0x90, 0xc7, 0x5f, 0x0c, 0xed, 0x5c, 0x7c, 0x6c, 0x2e,
	0x75, 0x8b, 0x6b, 0xe2, 0x26, 0x45, 0x51, 0x14, 0x01, 0x82, 0x5c, 0x72, 0x77, 0x56, 0x7d, 0xf9,
	0x28, 0x63, 0x5f, 0xfe, 0x2a, 0x04, 0x5a, 0x5c, 0xdb, 0x6c, 0x28, 0x2e, 0xc3, 0xa5, 0x7c, 0x16,
	0xd0, 0x47, 0xe9, 0x9f, 0x7d, 0x96, 0x3e, 0x44, 0x9f, 0xe6, 0xb0, 0xb3, 0x2b, 0x8a, 0x94, 0x96,
	0x8c, 0xed, 0xfc, 0xa7, 0xf9, 0xdc, 0xd9, 0xd9, 0x99, 0xd9, 0xdf, 0x52, 0xb0, 0x2c, 0x58, 0x72,
	0x19, 0x0c, 0xd8, 0xa3, 0x38, 0xe1, 0x29, 0xc7, 0x66, 0xc4, 0x23, 0xee, 0xc5, 0x81, 0xf3, 0x6f,
	0xd8, 0xfa, 0x21, 0x88, 0xfc, 0x9f, 0x82, 0x4b, 0xf6, 0x22, 0x1a, 0x5c, 0xf0, 0xe4, 0x35, 0x8f,
	0xd2, 0x0b, 0x97, 0x7d, 0x42, 0x84, 0x3b, 0xb1, 0x77, 0xce, 0xac, 0xda, 0x5e, 0x6d, 0xbf, 0xe1,
	0xd2, 0x6f, 0xdc, 0x80, 0x46, 0x18, 0x0c, 0x83, 0xd4, 0x5a, 0x20, 0xa6, 0x22, 0xf0, 0x1e, 0x80,
	0x48, 0xbd, 0x24, 0xed, 0xa7, 0xc1, 0x90, 0x59, 0xf5, 0xbd, 0xda, 0x7e, 0xdd, 0x6d, 0x13, 0xe7,
	0x38, 0x18, 0x32, 0xbc, 0x0b, 0x2d, 0x16, 0xf9, 0x4a, 0x78, 0x87, 0x84, 0x4d, 0x16, 0xf9, 0x52,
	0xe4, 0x3c, 0x35, 0xaf, 0x2e, 0x62, 0x69, 0x34, 0x12, 0x2c, 0xe9, 0x07, 0xbe, 0xb0, 0x6a, 0x7b,
	0xf5, 0xfd, 0x86, 0xdb, 0x94, 0x74, 0xcf, 0x17, 0xce, 0x07, 0xd8, 0x31, 0x18, 0xbd, 0xe4, 0xa3,
	0x28, 0x95, 0x71, 0x17, 0xa3, 0xa9, 0x55, 0x45, 0xb3, 0x30, 0x1b, 0x4d, 0xb9, 0x63, 0x11, 0xcb,
	0xcd, 0x0f, 0xe4, 0x6f, 0x9d, 0x11, 0x45, 0x38, 0x5b, 0xb0, 0xf1, 0x23, 0x4b, 0xa7, 0x36, 0xa2,
	0xe7, 0x0b, 0x97, 0x7d, 0x72, 0xfe, 0x64, 0xe4, 0x8b, 0xaa, 0x8d, 0x6d, 0xc3, 0xe6, 0x8c, 0x49,
	0x74, 0xc6, 0xa5, 0x2f, 0xdf, 0x2c, 0x10, 0x78, 0x04, 0x6b, 0x61, 0x70, 0xc9, 0xfa, 0x9e, 0x62,
	0xf7, 0x83, 0xe8, 0x8c, 0x93, 0xd7, 0xce, 0x93, 0xfb, 0x8f, 0xf4, 0x11, 0x3f, 0x9a, 0x37, 0xfd,
	0x8e, 0xfb, 0x63, 0x77, 0x35, 0x2c, 0x32, 0x9d, 0xff, 0x34, 0x60, 0xcb, 0xac, 0x8b, 0xdb, 0xd0,
	0xd4, 0x41, 0xd3, 0xe6, 0xd1, 0x5d, 0x54, 0x31, 0xa3, 0x05, 0xcd, 0xcb, 0x80, 0xfd, 0xc2, 0x12,
	0x41, 0xc9, 0x5c, 0x73, 0x27, 0xa4, 0xdc, 0xe7, 0xb9, 0x37, 0x64, 0xfd, 0x8f, 0x6c, 0x4c, 0x25,
	0xd1, 0x76, 0x9b, 0x92, 0x3e, 0x62, 0x63, 0x7c, 0x08, 0xb4, 0x76, 0x5f, 0x1d, 0xd3, 0x28, 0x0a,
	0xae, 0xa8, 0x2e, 0xd0, 0x5d, 0x96, 0xec, 0xf7, 0x92, 0x7b, 0x12, 0x05, 0x57, 0xb8, 0x03, 0x6d,
	0xd2, 0x1b, 0x72, 0x9f, 0x59, 0x0d, 0x72, 0xdf, 0x92, 0x8c, 0xd7, 0xdc, 0x67, 0x99, 0x30, 0x1d,
	0xc7, 0xcc, 0x5a, 0x9c, 0x0a, 0x8f, 0xc7, 0x31, 0xc3, 0xaf, 0x61, 0x49, 0xad, 0x30, 0x3a, 0x25,
	0x79, 0x93, 0xe4, 0x1d, 0x72, 0xaf, 0x58, 0x68, 0x43, 0x6b, 0x70, 0xe1, 0x45, 0x11, 0x0b, 0x85,
	0xd5, 0xda, 0xab, 0xef, 0xb7, 0xdd, 0x8c, 0x96, 0x25, 0x44, 0xe6, 0x41, 0x94, 0x26, 0xdc, 0x6a,
	0x53, 0xf4, 0xb4, 0x5a, 0x4f, 0x32, 0xa4, 0x77, 0x95, 0x70, 0xad, 0x00, 0xa4, 0xd0, 0x51, 0x3c,
	0xa5, 0xb2, 0x09, 0x8b, 0x21, 0x3f, 0x97, 0xf9, 0xea, 0x90, 0xb0, 0x11, 0xf2, 0xf3, 0x9e, 0x2f,
	0x83, 0xa6, 0xa4, 0x50, 0x50, 0x4b, 0x24, 0xa1, 0x2c, 0x51, 0xd0, 0xf7, 0xa1, 0x23, 0x06, 0x09,
	0x63, 0x91, 0x12, 0x2f, 0x53, 0xcc, 0xa0, 0x58, 0xa4, 0x20, 0xbb, 0x8f, 0x5d, 0xb2, 0xd0, 0x5a,
	0x21, 0x91, 0x22, 0x64, 0x9f, 0x9e, 0x79, 0x91, 0xb0, 0x56, 0x89, 0x49, 0xbf, 0xb1, 0x0b, 0x75,
	0x76, 0x15, 0x5b, 0xdd, 0xbd, 0xda, 0x7e, 0xcd, 0x95, 0x3f, 0xe5, 0x96, 0xd4, 0xca, 0x41, 0x1a,
	0x32, 0x6b, 0x4d, 0x6d, 0x89, 0x96, 0x96, 0x0c, 0x7c, 0x0c, 0xeb, 0x03, 0x96, 0xa4, 0xc1, 0x59,
	0x30, 0xf0, 0xd2, 0x80, 0x47, 0x7a, 0x67, 0x48, 0x7a, 0x58, 0x10, 0xcd, 0xe6, 0xe0, 0x3c, 0xe1,
	0xa3, 0xd8, 0x5a, 0xa7, 0x14, 0xea, 0x1c, 0xfc, 0x28, 0x59, 0x72, 0xb3, 0x54, 0x34, 0x91, 0x37,
	0x64, 0xd6, 0x86, 0xda, 0xac, 0x64, 0xbc, 0xf1, 0x86, 0x0c, 0x0f, 0x60, 0x23, 0x4d, 0xbc, 0x48,
	0x9c, 0xb1, 0xa4, 0x3f, 0x29, 0x86, 0x74, 0x24, 0xac, 0x4d, 0xda, 0x05, 0x4e, 0x64, 0x3f, 0xa9,
	0x82, 0x48, 0x47, 0xc2, 0xf9, 0x06, 0x40, 0x76, 0xe7, 0xdb, 0x88, 0xc9, 0x2e, 0x9f, 0xa9, 0xc8,
	0xc6, 0xa4, 0x22, 0x9d, 0xbd, 0x9c, 0x9a, 0x90, 0xc9, 0xf1, 0xbd, 0xd4, 0x23, 0x9d, 0x25, 0x97,
	0x7e, 0x3b, 0xfb, 0xd0, 0x51, 0x6d, 0x2e, 0x68, 0x5e, 0x54, 0x34, 0xe4, 0xd7, 0x79, 0x4d, 0xb3,
	0x33, 0x0e, 0xed, 0x93, 0xd8, 0xf7, 0x52, 0x0a, 0x6a, 0x03, 0x1a, 0x9f, 0x46, 0x2c, 0x19, 0x6b,
	0x0d, 0x45, 0xe0, 0x16, 0x2c, 0x8e, 0x48, 0x85, 0x5a, 0x64, 0xc9, 0xd5, 0x94, 0xe2, 0x0b, 0x96,
	0xa4, 0xd4, 0x1f, 0x2d, 0x57, 0x53, 0xb8, 0x0b, 0xed, 0x84, 0xa5, 0xa3, 0x24, 0x7a, 0xc3, 0x7e,
	0xa1, 0xc6, 0x68, 0xb9, 0x53, 0x86, 0x73, 0x7f, 0xba, 0xa0, 0x39, 0xa2, 0x6f, 0x61, 0x4d, 0x06,
	0xed, 0x72, 0x3e, 0x7c, 0xc5, 0x52, 0x2f, 0x08, 0x75, 0xba, 0x12, 0xce, 0x87, 0xb9, 0x74, 0x49,
	0xb2, 0xe7, 0x3b, 0xbf, 0x9b, 0xd7, 0x36, 0xbb, 0x7d, 0x0c, 0x58, 0x54, 0x14, 0x3a, 0x79, 0xda,
	0x6f, 0x96, 0x3c, 0xe5, 0x58, 0x38, 0xfb, 0x06, 0x03, 0xb3, 0xeb, 0x03, 0xd8, 0x9c, 0x0e, 0x9d,
	0xf7, 0x29, 0x8f, 0x25, 0xa5, 0xa3, 0xbe, 0xe0, 0x22, 0xcd, 0x45, 0x2d, 0xc9, 0x9e, 0xef, 0x7c,
	0x6f, 0xb6, 0x20, 0xf7, 0x03, 0x39, 0x2d, 0xf4, 0xa5, 0x25, 0x7f, 0xcb, 0x19, 0x35, 0x64, 0x42,
	0xc8, 0xbb, 0x6c, 0x41, 0x0d, 0x22, 0x4d, 0x3a, 0x6f, 0x61, 0xeb, 0x38, 0x57, 0x68, 0xef, 0x12,
	0x16, 0x7b, 0x49, 0xe5, 0xca, 0xb8, 0x0b, 0x90, 0xf2, 0xfe, 0x44, 0xa6, 0xae, 0xc1, 0x56, 0xca,
	0x0f, 0x55, 0x5c, 0x3f, 0x94, 0x38, 0xbc, 0x69, 0x60, 0x07, 0xb0, 0x99, 0xf7, 0xf3, 0xd2, 0x8b,
	0x06, 0x2c, 0xfc, 0x5c, 0x46, 0x4c, 0x16, 0x37, 0x5d, 0xf8, 0x35, 0x6c, 0x1c, 0x17, 0x5b, 0x2f,
	0x49, 0xbf, 0x20, 0x1f, 0xaf, 0x8c, 0xee, 0x6e, 0x1a, 0xd4, 0x11, 0xac, 0x17, 0xbd, 0xf0, 0xb8,
	0x32, 0xa6, 0x1d, 0x68, 0x8b, 0x94, 0xc7, 0x6a, 0x8c, 0xea, 0x90, 0x24, 0x43, 0x0e, 0x51, 0xe7,
	0xa5, 0xc9, 0xd9, 0x17, 0x9e, 0x8f, 0x9a, 0x50, 0x95, 0xe7, 0x73, 0x68, 0xb6, 0x10, 0xf8, 0x18,
	0x16, 0x13, 0x26, 0x46, 0xa1, 0x82, 0x15, 0x9d, 0x27, 0xdb, 0xd9, 0xbd, 0xfd, 0xee, 0x34, 0x6f,
	0xe1, 0x6a, 0x35, 0xe7, 0xff, 0x35, 0x58, 0x29, 0x8a, 0x6e, 0x79, 0x3a, 0xa5, 0x33, 0xb8, 0x4e,
	0x7a, 0x86, 0x19, 0x2c, 0xaf, 0xb5, 0x40, 0xf4, 0x59, 0xe4, 0xd3, 0x5c, 0x6a, 0xb8, 0x8d, 0x40,
	0x7c, 0x1f, 0xf9, 0xf8, 0x00, 0x56, 0x06, 0x09, 0xf3, 0x52, 0xd6, 0xf7, 0xf4, 0x7d, 0xde, 0x20,
	0xf1, 0x92, 0xe2, 0xbe, 0x50, 0xd7, 0xb9, 0x03, 0xcb, 0xfc, 0xf4, 0x5f, 0x6c, 0x20, 0x63, 0xe9,
	0x5f, 0xb0, 0x2b, 0xba, 0xb5, 0xdb, 0x6e, 0x47, 0x31, 0x7b, 0xfe, 0x21, 0xbb, 0x72, 0xfa, 0xc5,
	0xd3, 0xf9, 0x3b, 0x0f, 0xa2, 0xca, 0xa3, 0xce, 0x5d, 0x03, 0x0b, 0xf9, 0x6b, 0x40, 0x0e, 0xd7,
	0xc2, 0x6e, 0x34, 0x35, 0x7b, 0xfc, 0x6a, 0x81, 0x9b, 0x1e, 0xbf, 0x45, 0x40, 0xe9, 0x45, 0x18,
	0xe6, 0x5d, 0x11, 0xea, 0xeb, 0x95, 0x48, 0x8a, 0xe7, 0x5c, 0xbf, 0xce, 0x39, 0xdf, 0x87, 0x7b,
	0xca, 0x95, 0x9e, 0x22, 0x73, 0x6b, 0xbd, 0xab, 0x56, 0xb8, 0xc5, 0x92, 0xcf, 0x60, 0x57, 0x47,
	0x4f, 0x25, 0x32, 0xbb, 0xe2, 0x4c, 0x39, 0xd5, 0x66, 0x9a, 0xfd, 0x6d, 0xa5, 0xf5, 0x2d, 0xc2,
	0xf9, 0x6f, 0x0d, 0xec, 0x22, 0x20, 0xfd, 0x10, 0xa4, 0x17, 0x2f, 0xbd, 0xc1, 0x05, 0xcd, 0xe8,
	0xbf, 0x42, 0xeb, 0x3d, 0x4f, 0x52, 0xd9, 0xd5, 0x14, 0xcb, 0xca, 0x93, 0xdd, 0xcc, 0x63, 0xce,
	0x66, 0xa2, 0xe3, 0x66, 0xda, 0xf8, 0x00, 0x96, 0xa5, 0xa7, 0x20, 0x3a, 0x09, 0xe8, 0x72, 0xb7,
	0x16, 0xf6, 0xea, 0xfb, 0x75, 0xb7, 0xc8, 0xc4, 0x87, 0xb0, 0x22, 0x19, 0x7c, 0x94, 0x4e, 0xd4,
	0xea, 0xa4, 0x36, 0xc3, 0x75, 0x0e, 0x2a, 0xa2, 0xa4, 0xca, 0x7a, 0x95, 0xbb, 0xf0, 0xe4, 0x6f,
	0xe7, 0x39, 0x74, 0x69, 0x14, 0xea, 0x7b, 0x6e, 0xc4, 0x44, 0x6a, 0xd2, 0x2b, 0xad, 0x6e, 0x67,
	0x1d, 0xd6, 0x72, 0x0e, 0x44, 0xcc, 0x23, 0xc1, 0x9c, 0xdf, 0xc3, 0x6a, 0xee, 0xf2, 0x24, 0xa7,
	0x5b, 0xb0, 0x78, 0x42, 0x16, 0xe4, 0xf6, 0x8e, 0xab, 0x29, 0x07, 0x65, 0x00, 0xd9, 0xad, 0xa9,
	0xcc, 0x0f, 0x60, 0xd3, 0x65, 0x5e, 0x28, 0x1f, 0x46, 0xef, 0x42, 0x6f, 0x7c, 0xea, 0x0d, 0x3e,
	0xbe, 0xad, 0x6c, 0x3e, 0xf9, 0x5e, 0x31, 0x58, 0x88, 0xd8, 0x39, 0x81, 0xad, 0x39, 0xc1, 0xd9,
	0x59, 0x15, 0x6c, 0x93, 0xc3, 0x21, 0xd1, 0x26, 0xfd, 0xcb, 0xc9, 0x86, 0xdb, 0x6e, 0x67, 0xc2,
	0xfc, 0xb9, 0xe7, 0xcb, 0xb6, 0x33, 0xb9, 0x15, 0xb1, 0xf3, 0x86, 0x5a, 0x41, 0x6e, 0x87, 0x0a,
	0x29, 0xe6, 0x74, 0xcd, 0xf0, 0x70, 0x24, 0x01, 0x6b, 0x15, 0xfe, 0x91, 0x90, 0x2d, 0x0e, 0xae,
	0x58, 0x38, 0x79, 0xd1, 0x12, 0xe1, 0x3c, 0xad, 0xf4, 0x27, 0x62, 0x23, 0x8c, 0xf9, 0x19, 0x96,
	0x8f, 0x82, 0xc1, 0xc7, 0xf7, 0x69, 0xc2, 0xbc, 0x61, 0xe5, 0xa2, 0xdf, 0x02, 0xb2, 0xab, 0x38,
	0x48, 0x98, 0xdf, 0x17, 0xa4, 0x4d, 0xaf, 0xa4, 0x05, 0x82, 0x7a, 0x5d, 0x2d, 0x51, 0x6e, 0x8e,
	0xd8, 0xd8, 0x59, 0x2d, 0xf8, 0x15, 0xb1, 0x23, 0x60, 0x9d, 0x4e, 0xff, 0xc8, 0x4b, 0x3c, 0xfe,
	0x31, 0x3b, 0xec, 0xd2, 0xdc, 0x6e, 0x43, 0x53, 0xf0, 0xe8, 0x3c, 0x57, 0x46, 0x92, 0xec, 0xf9,
	0x72, 0x17, 0x04, 0xce, 0xd5, 0xfb, 0x8c, 0x7e, 0xcb, 0x92, 0xf1, 0x92, 0x54, 0x56, 0xfb, 0x1d,
	0xe2, 0x6a, 0x4a, 0x5e, 0xe5, 0xc5, 0x45, 0x55, 0xd9, 0xdc, 0x70, 0x72, 0xfe, 0x11, 0x50, 0x16,
	0xde, 0x35, 0x23, 0x97, 0xd3, 0xba, 0xa0, 0x7e, 0x9b, 0x35, 0xff, 0xf0, 0x67, 0x58, 0x37, 0x8c,
	0x03, 0x04, 0x58, 0x3c, 0x89, 0x46, 0x82, 0xf9, 0xdd, 0xdf, 0xe0, 0x1a, 0x2c, 0x67, 0xf8, 0xe4,
	0x15, 0x13, 0x83, 0x6e, 0xed, 0xc9, 0xff, 0x36, 0x60, 0x59, 0xe3, 0x4b, 0xf5, 0xe5, 0x04, 0x9f,
	0x42, 0x53, 0xbf, 0x2c, 0x70, 0x3d, 0x1b, 0x34, 0xd3, 0x27, 0x89, 0x6d, 0x60, 0x0a, 0x7c, 0x06,
	0x5d, 0x4d, 0x65, 0x53, 0xe1, 0x06, 0xd6, 0x7f, 0x81, 0xd6, 0xe4, 0x01, 0x82, 0x1b, 0x05, 0x05,
	0xfd, 0x7a, 0xb1, 0x4d, 0x5c, 0x81, 0xcf, 0x15, 0xaa, 0x97, 0xe4, 0x74, 0xd9, 0x9b, 0x38, 0xf8,
	0x1b, 0x74, 0xf5, 0x2b, 0x23, 0x83, 0xef, 0x88, 0x99, 0x66, 0xf6, 0xe2, 0xb1, 0xe7, 0x79, 0x02,
	0x0f, 0x61, 0xa5, 0x08, 0xfc, 0xd1, 0x2e, 0xac, 0x51, 0x78, 0x99, 0xd8, 0xe5, 0x32, 0x81, 0xff,
	0x80, 0xed, 0x22, 0x73, 0xba, 0x99, 0xdb, 0xba, 0x3c, 0x82, 0xd5, 0x99, 0x57, 0x09, 0xee, 0x94,
	0xa8, 0xcb, 0x2b, 0xcf, 0xae, 0x10, 0x0a, 0x3c, 0x06, 0x9c, 0x7f, 0x86, 0xe0, 0x57, 0x86, 0x5b,
	0x28, 0x37, 0x98, 0xed, 0x6a, 0xb9, 0xc0, 0x0f, 0x45, 0x88, 0xa2, 0x6f, 0x77, 0x9c, 0x7e, 0xd0,
	0x31, 0xbf, 0x59, 0xec, 0xcf, 0x28, 0x50, 0xb8, 0xf3, 0x6f, 0x84, 0x5c, 0xb8, 0xc6, 0x27, 0x87,
	0x5d, 0x2d, 0x97, 0x87, 0xb4, 0x36, 0x87, 0xf1, 0xf1, 0x9e, 0xd1, 0x68, 0xf2, 0x9c, 0xb0, 0x2b,
	0xc5, 0x02, 0xdf, 0x40, 0x77, 0x16, 0xa3, 0xe3, 0x6e, 0x89, 0x09, 0xbd, 0x05, 0xec, 0x2a, 0xe9,
	0xdc, 0xc6, 0x35, 0x98, 0xfd, 0xaa, 0x2c, 0x08, 0x85, 0xe5, 0xed, 0x6a, 0xb9, 0xc0, 0x7f, 0xc2,
	0xce, 0xbc, 0x60, 0x5a, 0xa1, 0x5f, 0xea, 0x7e, 0x26, 0x09, 0x12, 0xa9, 0x96, 0x24, 0x41, 0xa3,
	0x64, 0xbb, 0x4a, 0x4a, 0x65, 0x65, 0x80, 0xa6, 0x58, 0xf8, 0x4e, 0x68, 0x80, 0xb4, 0xf6, 0x67,
	0x14, 0x04, 0x86, 0x84, 0x7f, 0x4a, 0x70, 0x28, 0x3e, 0x9c, 0x31, 0x2f, 0x41, 0xb3, 0xf6, 0xf5,
	0xf4, 0x04, 0x06, 0x70, 0xb7, 0x14, 0x65, 0xe2, 0x37, 0xb3, 0xb1, 0x1a, 0x71, 0xac, 0x7d, 0x2d,
	0x35, 0x81, 0x03, 0xd8, 0x2e, 0x01, 0x76, 0xf8, 0xdb, 0x92, 0xaf, 0xab, 0x79, 0x80, 0x6a, 0x5f,
	0x43, 0x89, 0xda, 0x67, 0xee, 0x3b, 0x71, 0xae, 0x7d, 0x4c, 0xdf, 0x96, 0xed, 0x4a, 0x31, 0x95,
	0xfb, 0xfc, 0x77, 0xdc, 0x5c, 0x3d, 0x1a, 0x3f, 0x32, 0xdb, 0xd5, 0x72, 0x81, 0xdf, 0x41, 0x3b,
	0xc3, 0x9c, 0x78, 0x37, 0x53, 0x9e, 0x05, 0xb2, 0xb9, 0xe9, 0x3b, 0x07, 0x51, 0xf1, 0x39, 0xb4,
	0xb2, 0x31, 0x69, 0xe5, 0xf4, 0x0a, 0xa8, 0xd5, 0xbe, 0x6b, 0x90, 0x68, 0x07, 0xc7, 0x80, 0xf3,
	0x90, 0x33, 0xb7, 0x35, 0x23, 0x82, 0xb5, 0x2b, 0xe5, 0x22, 0x96, 0xad, 0x61, 0x00, 0x96, 0xb9,
	0xd6, 0x30, 0xa3, 0x59, 0xbb, 0x5a, 0x41, 0xc4, 0xba, 0x35, 0x4a, 0x70, 0x64, 0xb1, 0x35, 0xca,
	0xc1, 0xab, 0x7d, 0x2d, 0x3d, 0x11, 0xe3, 0x33, 0x80, 0x29, 0x50, 0xc4, 0xad, 0xcc, 0xaa, 0x80,
	0x4a, 0x6d, 0x23, 0x5f, 0x25, 0xc1, 0xf0, 0xef, 0x47, 0x2e, 0x09, 0xe6, 0xff, 0x89, 0xec, 0x6a,
	0x05, 0x11, 0xe3, 0x19, 0x58, 0x65, 0x7f, 0xab, 0xe0, 0x83, 0x2a, 0xe3, 0xc9, 0x5f, 0x3a, 0xf6,
	0x35, 0xb4, 0x44, 0x8c, 0x47, 0xb0, 0x94, 0x47, 0xa8, 0xb9, 0x61, 0x69, 0x40, 0xcb, 0xb9, 0x1e,
	0x32, 0xc2, 0xda, 0x43, 0xe8, 0xe4, 0x90, 0x67, 0x0e, 0x23, 0xcc, 0xc3, 0x57, 0x7b, 0xd7, 0x2c,
	0x54, 0x9e, 0x4e, 0x17, 0xe9, 0x1f, 0xb7, 0xa7, 0xbf, 0x06, 0x00, 0x00, 0xff, 0xff, 0xe8, 0x45,
	0xda, 0x9b, 0x82, 0x1b, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AnchorServiceClient is the client API for AnchorService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AnchorServiceClient interface {
	FindOne(ctx context.Context, in *FindOneReq, opts ...grpc.CallOption) (*FindOneRes, error)
	FindOneWithCache(ctx context.Context, in *FindOneReq, opts ...grpc.CallOption) (*FindOneRes, error)
	FindList(ctx context.Context, in *FindListReq, opts ...grpc.CallOption) (*FindListRes, error)
	FindListWithCache(ctx context.Context, in *FindListReq, opts ...grpc.CallOption) (*FindListRes, error)
	UpdateRoomDetail(ctx context.Context, in *UpdateReq, opts ...grpc.CallOption) (*UpdateRes, error)
	FindRoomDetail(ctx context.Context, in *FindRoomDetailReq, opts ...grpc.CallOption) (*FindRoomDetailRes, error)
	FindRoomDetailWithCache(ctx context.Context, in *FindRoomDetailReq, opts ...grpc.CallOption) (*FindRoomDetailRes, error)
	FindRoomDetails(ctx context.Context, in *FindRoomDetailsReq, opts ...grpc.CallOption) (*FindRoomDetailsRes, error)
	//下播处理live_anchors接口。
	LiveAnchorStopLive(ctx context.Context, in *LiveAnchorStopLiveReq, opts ...grpc.CallOption) (*LiveAnchorStopLiveRes, error)
	TransferLivePrepare(ctx context.Context, in *TransferLivePrepareReq, opts ...grpc.CallOption) (*TransferLivePrepareRes, error)
	TransferLiveCancel(ctx context.Context, in *TransferLiveCancelReq, opts ...grpc.CallOption) (*TransferLiveCancelRes, error)
	TransferLiveStart(ctx context.Context, in *TransferLiveStartReq, opts ...grpc.CallOption) (*TransferLiveStartRes, error)
	TransferLiveStop(ctx context.Context, in *TransferLiveStopReq, opts ...grpc.CallOption) (*TransferLiveStopRes, error)
	TransferLiveStatus(ctx context.Context, in *TransferLiveStatusReq, opts ...grpc.CallOption) (*TransferLiveStatusRes, error)
	TransferLiveStatusWithCache(ctx context.Context, in *TransferLiveStatusReq, opts ...grpc.CallOption) (*TransferLiveStatusRes, error)
	TransferLiveJoin(ctx context.Context, in *TransferLiveJoinReq, opts ...grpc.CallOption) (*TransferLiveJoinRes, error)
	GetAllTransferLives(ctx context.Context, in *GetAllTransferLivesReq, opts ...grpc.CallOption) (*GetAllTransferLivesRes, error)
	GetAllPrepareTransferLives(ctx context.Context, in *GetAllPrepareTransferLivesReq, opts ...grpc.CallOption) (*GetAllPrepareTransferLivesRes, error)
	GetAllToHostTransferLives(ctx context.Context, in *GetAllToHostTransferLivesReq, opts ...grpc.CallOption) (*GetAllToHostTransferLivesRes, error)
	// 获取在线主播RPC接口(live_anchors表)，有缓存
	GetLiveAnchorsWithCache(ctx context.Context, in *GetLiveAnchorsWithCacheReq, opts ...grpc.CallOption) (*GetLiveAnchorsWithCacheRes, error)
	// 正在开播主播的数据
	GetLiveAnchorsIds(ctx context.Context, in *GetLiveAnchorsIdsReq, opts ...grpc.CallOption) (*GetLiveAnchorsIdsRes, error)
	// 推荐系统需要正在开播主播的数据
	GetLiveAnchorsInfo(ctx context.Context, in *GetLiveAnchorsInfoReq, opts ...grpc.CallOption) (*GetLiveAnchorsInfoRes, error)
	// 主播开播通知
	StartLive(ctx context.Context, in *StartLiveRequest, opts ...grpc.CallOption) (*StartLiveResponse, error)
	// 主播停播通知
	StopLive(ctx context.Context, in *StopLiveRequest, opts ...grpc.CallOption) (*StopLiveResponse, error)
	RealtimePlaybackOn(ctx context.Context, in *RealtimePlaybackOnReq, opts ...grpc.CallOption) (*RealtimePlaybackOnRsp, error)
	RealtimePlaybackOff(ctx context.Context, in *RealtimePlaybackOffReq, opts ...grpc.CallOption) (*RealtimePlaybackOffRsp, error)
	GetLiveTransportResolution(ctx context.Context, in *GetLiveTransportResolutionReq, opts ...grpc.CallOption) (*GetLiveTransportResolutionRsp, error)
	KickStream(ctx context.Context, in *KickStreamReq, opts ...grpc.CallOption) (*KickStreamRsp, error)
	FindLiveAnchorMonth(ctx context.Context, in *FindLiveAnchorMonthReq, opts ...grpc.CallOption) (*FindLiveAnchorMonthRsp, error)
	FindLiveAnchorMonthCount(ctx context.Context, in *FindLiveAnchorMonthCountReq, opts ...grpc.CallOption) (*FindLiveAnchorMonthCountRsp, error)
	StartKaraoke(ctx context.Context, in *StartKaraokeRequest, opts ...grpc.CallOption) (*StartKaraokeResponse, error)
	StopKaraoke(ctx context.Context, in *StopKaraokeRequest, opts ...grpc.CallOption) (*StopKaraokeResponse, error)
}

type anchorServiceClient struct {
	cc *grpc.ClientConn
}

func NewAnchorServiceClient(cc *grpc.ClientConn) AnchorServiceClient {
	return &anchorServiceClient{cc}
}

func (c *anchorServiceClient) FindOne(ctx context.Context, in *FindOneReq, opts ...grpc.CallOption) (*FindOneRes, error) {
	out := new(FindOneRes)
	err := c.cc.Invoke(ctx, "/nonoapi.AnchorService/FindOne", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *anchorServiceClient) FindOneWithCache(ctx context.Context, in *FindOneReq, opts ...grpc.CallOption) (*FindOneRes, error) {
	out := new(FindOneRes)
	err := c.cc.Invoke(ctx, "/nonoapi.AnchorService/FindOneWithCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *anchorServiceClient) FindList(ctx context.Context, in *FindListReq, opts ...grpc.CallOption) (*FindListRes, error) {
	out := new(FindListRes)
	err := c.cc.Invoke(ctx, "/nonoapi.AnchorService/FindList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *anchorServiceClient) FindListWithCache(ctx context.Context, in *FindListReq, opts ...grpc.CallOption) (*FindListRes, error) {
	out := new(FindListRes)
	err := c.cc.Invoke(ctx, "/nonoapi.AnchorService/FindListWithCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *anchorServiceClient) UpdateRoomDetail(ctx context.Context, in *UpdateReq, opts ...grpc.CallOption) (*UpdateRes, error) {
	out := new(UpdateRes)
	err := c.cc.Invoke(ctx, "/nonoapi.AnchorService/UpdateRoomDetail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *anchorServiceClient) FindRoomDetail(ctx context.Context, in *FindRoomDetailReq, opts ...grpc.CallOption) (*FindRoomDetailRes, error) {
	out := new(FindRoomDetailRes)
	err := c.cc.Invoke(ctx, "/nonoapi.AnchorService/FindRoomDetail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *anchorServiceClient) FindRoomDetailWithCache(ctx context.Context, in *FindRoomDetailReq, opts ...grpc.CallOption) (*FindRoomDetailRes, error) {
	out := new(FindRoomDetailRes)
	err := c.cc.Invoke(ctx, "/nonoapi.AnchorService/FindRoomDetailWithCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *anchorServiceClient) FindRoomDetails(ctx context.Context, in *FindRoomDetailsReq, opts ...grpc.CallOption) (*FindRoomDetailsRes, error) {
	out := new(FindRoomDetailsRes)
	err := c.cc.Invoke(ctx, "/nonoapi.AnchorService/FindRoomDetails", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *anchorServiceClient) LiveAnchorStopLive(ctx context.Context, in *LiveAnchorStopLiveReq, opts ...grpc.CallOption) (*LiveAnchorStopLiveRes, error) {
	out := new(LiveAnchorStopLiveRes)
	err := c.cc.Invoke(ctx, "/nonoapi.AnchorService/LiveAnchorStopLive", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *anchorServiceClient) TransferLivePrepare(ctx context.Context, in *TransferLivePrepareReq, opts ...grpc.CallOption) (*TransferLivePrepareRes, error) {
	out := new(TransferLivePrepareRes)
	err := c.cc.Invoke(ctx, "/nonoapi.AnchorService/TransferLivePrepare", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *anchorServiceClient) TransferLiveCancel(ctx context.Context, in *TransferLiveCancelReq, opts ...grpc.CallOption) (*TransferLiveCancelRes, error) {
	out := new(TransferLiveCancelRes)
	err := c.cc.Invoke(ctx, "/nonoapi.AnchorService/TransferLiveCancel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *anchorServiceClient) TransferLiveStart(ctx context.Context, in *TransferLiveStartReq, opts ...grpc.CallOption) (*TransferLiveStartRes, error) {
	out := new(TransferLiveStartRes)
	err := c.cc.Invoke(ctx, "/nonoapi.AnchorService/TransferLiveStart", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *anchorServiceClient) TransferLiveStop(ctx context.Context, in *TransferLiveStopReq, opts ...grpc.CallOption) (*TransferLiveStopRes, error) {
	out := new(TransferLiveStopRes)
	err := c.cc.Invoke(ctx, "/nonoapi.AnchorService/TransferLiveStop", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *anchorServiceClient) TransferLiveStatus(ctx context.Context, in *TransferLiveStatusReq, opts ...grpc.CallOption) (*TransferLiveStatusRes, error) {
	out := new(TransferLiveStatusRes)
	err := c.cc.Invoke(ctx, "/nonoapi.AnchorService/TransferLiveStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *anchorServiceClient) TransferLiveStatusWithCache(ctx context.Context, in *TransferLiveStatusReq, opts ...grpc.CallOption) (*TransferLiveStatusRes, error) {
	out := new(TransferLiveStatusRes)
	err := c.cc.Invoke(ctx, "/nonoapi.AnchorService/TransferLiveStatusWithCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *anchorServiceClient) TransferLiveJoin(ctx context.Context, in *TransferLiveJoinReq, opts ...grpc.CallOption) (*TransferLiveJoinRes, error) {
	out := new(TransferLiveJoinRes)
	err := c.cc.Invoke(ctx, "/nonoapi.AnchorService/TransferLiveJoin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *anchorServiceClient) GetAllTransferLives(ctx context.Context, in *GetAllTransferLivesReq, opts ...grpc.CallOption) (*GetAllTransferLivesRes, error) {
	out := new(GetAllTransferLivesRes)
	err := c.cc.Invoke(ctx, "/nonoapi.AnchorService/GetAllTransferLives", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *anchorServiceClient) GetAllPrepareTransferLives(ctx context.Context, in *GetAllPrepareTransferLivesReq, opts ...grpc.CallOption) (*GetAllPrepareTransferLivesRes, error) {
	out := new(GetAllPrepareTransferLivesRes)
	err := c.cc.Invoke(ctx, "/nonoapi.AnchorService/GetAllPrepareTransferLives", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *anchorServiceClient) GetAllToHostTransferLives(ctx context.Context, in *GetAllToHostTransferLivesReq, opts ...grpc.CallOption) (*GetAllToHostTransferLivesRes, error) {
	out := new(GetAllToHostTransferLivesRes)
	err := c.cc.Invoke(ctx, "/nonoapi.AnchorService/GetAllToHostTransferLives", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *anchorServiceClient) GetLiveAnchorsWithCache(ctx context.Context, in *GetLiveAnchorsWithCacheReq, opts ...grpc.CallOption) (*GetLiveAnchorsWithCacheRes, error) {
	out := new(GetLiveAnchorsWithCacheRes)
	err := c.cc.Invoke(ctx, "/nonoapi.AnchorService/GetLiveAnchorsWithCache", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *anchorServiceClient) GetLiveAnchorsIds(ctx context.Context, in *GetLiveAnchorsIdsReq, opts ...grpc.CallOption) (*GetLiveAnchorsIdsRes, error) {
	out := new(GetLiveAnchorsIdsRes)
	err := c.cc.Invoke(ctx, "/nonoapi.AnchorService/GetLiveAnchorsIds", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *anchorServiceClient) GetLiveAnchorsInfo(ctx context.Context, in *GetLiveAnchorsInfoReq, opts ...grpc.CallOption) (*GetLiveAnchorsInfoRes, error) {
	out := new(GetLiveAnchorsInfoRes)
	err := c.cc.Invoke(ctx, "/nonoapi.AnchorService/GetLiveAnchorsInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *anchorServiceClient) StartLive(ctx context.Context, in *StartLiveRequest, opts ...grpc.CallOption) (*StartLiveResponse, error) {
	out := new(StartLiveResponse)
	err := c.cc.Invoke(ctx, "/nonoapi.AnchorService/StartLive", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *anchorServiceClient) StopLive(ctx context.Context, in *StopLiveRequest, opts ...grpc.CallOption) (*StopLiveResponse, error) {
	out := new(StopLiveResponse)
	err := c.cc.Invoke(ctx, "/nonoapi.AnchorService/StopLive", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *anchorServiceClient) RealtimePlaybackOn(ctx context.Context, in *RealtimePlaybackOnReq, opts ...grpc.CallOption) (*RealtimePlaybackOnRsp, error) {
	out := new(RealtimePlaybackOnRsp)
	err := c.cc.Invoke(ctx, "/nonoapi.AnchorService/RealtimePlaybackOn", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *anchorServiceClient) RealtimePlaybackOff(ctx context.Context, in *RealtimePlaybackOffReq, opts ...grpc.CallOption) (*RealtimePlaybackOffRsp, error) {
	out := new(RealtimePlaybackOffRsp)
	err := c.cc.Invoke(ctx, "/nonoapi.AnchorService/RealtimePlaybackOff", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *anchorServiceClient) GetLiveTransportResolution(ctx context.Context, in *GetLiveTransportResolutionReq, opts ...grpc.CallOption) (*GetLiveTransportResolutionRsp, error) {
	out := new(GetLiveTransportResolutionRsp)
	err := c.cc.Invoke(ctx, "/nonoapi.AnchorService/GetLiveTransportResolution", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *anchorServiceClient) KickStream(ctx context.Context, in *KickStreamReq, opts ...grpc.CallOption) (*KickStreamRsp, error) {
	out := new(KickStreamRsp)
	err := c.cc.Invoke(ctx, "/nonoapi.AnchorService/KickStream", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *anchorServiceClient) FindLiveAnchorMonth(ctx context.Context, in *FindLiveAnchorMonthReq, opts ...grpc.CallOption) (*FindLiveAnchorMonthRsp, error) {
	out := new(FindLiveAnchorMonthRsp)
	err := c.cc.Invoke(ctx, "/nonoapi.AnchorService/FindLiveAnchorMonth", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *anchorServiceClient) FindLiveAnchorMonthCount(ctx context.Context, in *FindLiveAnchorMonthCountReq, opts ...grpc.CallOption) (*FindLiveAnchorMonthCountRsp, error) {
	out := new(FindLiveAnchorMonthCountRsp)
	err := c.cc.Invoke(ctx, "/nonoapi.AnchorService/FindLiveAnchorMonthCount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *anchorServiceClient) StartKaraoke(ctx context.Context, in *StartKaraokeRequest, opts ...grpc.CallOption) (*StartKaraokeResponse, error) {
	out := new(StartKaraokeResponse)
	err := c.cc.Invoke(ctx, "/nonoapi.AnchorService/StartKaraoke", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *anchorServiceClient) StopKaraoke(ctx context.Context, in *StopKaraokeRequest, opts ...grpc.CallOption) (*StopKaraokeResponse, error) {
	out := new(StopKaraokeResponse)
	err := c.cc.Invoke(ctx, "/nonoapi.AnchorService/StopKaraoke", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AnchorServiceServer is the server API for AnchorService service.
type AnchorServiceServer interface {
	FindOne(context.Context, *FindOneReq) (*FindOneRes, error)
	FindOneWithCache(context.Context, *FindOneReq) (*FindOneRes, error)
	FindList(context.Context, *FindListReq) (*FindListRes, error)
	FindListWithCache(context.Context, *FindListReq) (*FindListRes, error)
	UpdateRoomDetail(context.Context, *UpdateReq) (*UpdateRes, error)
	FindRoomDetail(context.Context, *FindRoomDetailReq) (*FindRoomDetailRes, error)
	FindRoomDetailWithCache(context.Context, *FindRoomDetailReq) (*FindRoomDetailRes, error)
	FindRoomDetails(context.Context, *FindRoomDetailsReq) (*FindRoomDetailsRes, error)
	//下播处理live_anchors接口。
	LiveAnchorStopLive(context.Context, *LiveAnchorStopLiveReq) (*LiveAnchorStopLiveRes, error)
	TransferLivePrepare(context.Context, *TransferLivePrepareReq) (*TransferLivePrepareRes, error)
	TransferLiveCancel(context.Context, *TransferLiveCancelReq) (*TransferLiveCancelRes, error)
	TransferLiveStart(context.Context, *TransferLiveStartReq) (*TransferLiveStartRes, error)
	TransferLiveStop(context.Context, *TransferLiveStopReq) (*TransferLiveStopRes, error)
	TransferLiveStatus(context.Context, *TransferLiveStatusReq) (*TransferLiveStatusRes, error)
	TransferLiveStatusWithCache(context.Context, *TransferLiveStatusReq) (*TransferLiveStatusRes, error)
	TransferLiveJoin(context.Context, *TransferLiveJoinReq) (*TransferLiveJoinRes, error)
	GetAllTransferLives(context.Context, *GetAllTransferLivesReq) (*GetAllTransferLivesRes, error)
	GetAllPrepareTransferLives(context.Context, *GetAllPrepareTransferLivesReq) (*GetAllPrepareTransferLivesRes, error)
	GetAllToHostTransferLives(context.Context, *GetAllToHostTransferLivesReq) (*GetAllToHostTransferLivesRes, error)
	// 获取在线主播RPC接口(live_anchors表)，有缓存
	GetLiveAnchorsWithCache(context.Context, *GetLiveAnchorsWithCacheReq) (*GetLiveAnchorsWithCacheRes, error)
	// 正在开播主播的数据
	GetLiveAnchorsIds(context.Context, *GetLiveAnchorsIdsReq) (*GetLiveAnchorsIdsRes, error)
	// 推荐系统需要正在开播主播的数据
	GetLiveAnchorsInfo(context.Context, *GetLiveAnchorsInfoReq) (*GetLiveAnchorsInfoRes, error)
	// 主播开播通知
	StartLive(context.Context, *StartLiveRequest) (*StartLiveResponse, error)
	// 主播停播通知
	StopLive(context.Context, *StopLiveRequest) (*StopLiveResponse, error)
	RealtimePlaybackOn(context.Context, *RealtimePlaybackOnReq) (*RealtimePlaybackOnRsp, error)
	RealtimePlaybackOff(context.Context, *RealtimePlaybackOffReq) (*RealtimePlaybackOffRsp, error)
	GetLiveTransportResolution(context.Context, *GetLiveTransportResolutionReq) (*GetLiveTransportResolutionRsp, error)
	KickStream(context.Context, *KickStreamReq) (*KickStreamRsp, error)
	FindLiveAnchorMonth(context.Context, *FindLiveAnchorMonthReq) (*FindLiveAnchorMonthRsp, error)
	FindLiveAnchorMonthCount(context.Context, *FindLiveAnchorMonthCountReq) (*FindLiveAnchorMonthCountRsp, error)
	StartKaraoke(context.Context, *StartKaraokeRequest) (*StartKaraokeResponse, error)
	StopKaraoke(context.Context, *StopKaraokeRequest) (*StopKaraokeResponse, error)
}

// UnimplementedAnchorServiceServer can be embedded to have forward compatible implementations.
type UnimplementedAnchorServiceServer struct {
}

func (*UnimplementedAnchorServiceServer) FindOne(ctx context.Context, req *FindOneReq) (*FindOneRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindOne not implemented")
}
func (*UnimplementedAnchorServiceServer) FindOneWithCache(ctx context.Context, req *FindOneReq) (*FindOneRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindOneWithCache not implemented")
}
func (*UnimplementedAnchorServiceServer) FindList(ctx context.Context, req *FindListReq) (*FindListRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindList not implemented")
}
func (*UnimplementedAnchorServiceServer) FindListWithCache(ctx context.Context, req *FindListReq) (*FindListRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindListWithCache not implemented")
}
func (*UnimplementedAnchorServiceServer) UpdateRoomDetail(ctx context.Context, req *UpdateReq) (*UpdateRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateRoomDetail not implemented")
}
func (*UnimplementedAnchorServiceServer) FindRoomDetail(ctx context.Context, req *FindRoomDetailReq) (*FindRoomDetailRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindRoomDetail not implemented")
}
func (*UnimplementedAnchorServiceServer) FindRoomDetailWithCache(ctx context.Context, req *FindRoomDetailReq) (*FindRoomDetailRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindRoomDetailWithCache not implemented")
}
func (*UnimplementedAnchorServiceServer) FindRoomDetails(ctx context.Context, req *FindRoomDetailsReq) (*FindRoomDetailsRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindRoomDetails not implemented")
}
func (*UnimplementedAnchorServiceServer) LiveAnchorStopLive(ctx context.Context, req *LiveAnchorStopLiveReq) (*LiveAnchorStopLiveRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LiveAnchorStopLive not implemented")
}
func (*UnimplementedAnchorServiceServer) TransferLivePrepare(ctx context.Context, req *TransferLivePrepareReq) (*TransferLivePrepareRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TransferLivePrepare not implemented")
}
func (*UnimplementedAnchorServiceServer) TransferLiveCancel(ctx context.Context, req *TransferLiveCancelReq) (*TransferLiveCancelRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TransferLiveCancel not implemented")
}
func (*UnimplementedAnchorServiceServer) TransferLiveStart(ctx context.Context, req *TransferLiveStartReq) (*TransferLiveStartRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TransferLiveStart not implemented")
}
func (*UnimplementedAnchorServiceServer) TransferLiveStop(ctx context.Context, req *TransferLiveStopReq) (*TransferLiveStopRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TransferLiveStop not implemented")
}
func (*UnimplementedAnchorServiceServer) TransferLiveStatus(ctx context.Context, req *TransferLiveStatusReq) (*TransferLiveStatusRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TransferLiveStatus not implemented")
}
func (*UnimplementedAnchorServiceServer) TransferLiveStatusWithCache(ctx context.Context, req *TransferLiveStatusReq) (*TransferLiveStatusRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TransferLiveStatusWithCache not implemented")
}
func (*UnimplementedAnchorServiceServer) TransferLiveJoin(ctx context.Context, req *TransferLiveJoinReq) (*TransferLiveJoinRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TransferLiveJoin not implemented")
}
func (*UnimplementedAnchorServiceServer) GetAllTransferLives(ctx context.Context, req *GetAllTransferLivesReq) (*GetAllTransferLivesRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllTransferLives not implemented")
}
func (*UnimplementedAnchorServiceServer) GetAllPrepareTransferLives(ctx context.Context, req *GetAllPrepareTransferLivesReq) (*GetAllPrepareTransferLivesRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllPrepareTransferLives not implemented")
}
func (*UnimplementedAnchorServiceServer) GetAllToHostTransferLives(ctx context.Context, req *GetAllToHostTransferLivesReq) (*GetAllToHostTransferLivesRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllToHostTransferLives not implemented")
}
func (*UnimplementedAnchorServiceServer) GetLiveAnchorsWithCache(ctx context.Context, req *GetLiveAnchorsWithCacheReq) (*GetLiveAnchorsWithCacheRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetLiveAnchorsWithCache not implemented")
}
func (*UnimplementedAnchorServiceServer) GetLiveAnchorsIds(ctx context.Context, req *GetLiveAnchorsIdsReq) (*GetLiveAnchorsIdsRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetLiveAnchorsIds not implemented")
}
func (*UnimplementedAnchorServiceServer) GetLiveAnchorsInfo(ctx context.Context, req *GetLiveAnchorsInfoReq) (*GetLiveAnchorsInfoRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetLiveAnchorsInfo not implemented")
}
func (*UnimplementedAnchorServiceServer) StartLive(ctx context.Context, req *StartLiveRequest) (*StartLiveResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StartLive not implemented")
}
func (*UnimplementedAnchorServiceServer) StopLive(ctx context.Context, req *StopLiveRequest) (*StopLiveResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StopLive not implemented")
}
func (*UnimplementedAnchorServiceServer) RealtimePlaybackOn(ctx context.Context, req *RealtimePlaybackOnReq) (*RealtimePlaybackOnRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RealtimePlaybackOn not implemented")
}
func (*UnimplementedAnchorServiceServer) RealtimePlaybackOff(ctx context.Context, req *RealtimePlaybackOffReq) (*RealtimePlaybackOffRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RealtimePlaybackOff not implemented")
}
func (*UnimplementedAnchorServiceServer) GetLiveTransportResolution(ctx context.Context, req *GetLiveTransportResolutionReq) (*GetLiveTransportResolutionRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetLiveTransportResolution not implemented")
}
func (*UnimplementedAnchorServiceServer) KickStream(ctx context.Context, req *KickStreamReq) (*KickStreamRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method KickStream not implemented")
}
func (*UnimplementedAnchorServiceServer) FindLiveAnchorMonth(ctx context.Context, req *FindLiveAnchorMonthReq) (*FindLiveAnchorMonthRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindLiveAnchorMonth not implemented")
}
func (*UnimplementedAnchorServiceServer) FindLiveAnchorMonthCount(ctx context.Context, req *FindLiveAnchorMonthCountReq) (*FindLiveAnchorMonthCountRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindLiveAnchorMonthCount not implemented")
}
func (*UnimplementedAnchorServiceServer) StartKaraoke(ctx context.Context, req *StartKaraokeRequest) (*StartKaraokeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StartKaraoke not implemented")
}
func (*UnimplementedAnchorServiceServer) StopKaraoke(ctx context.Context, req *StopKaraokeRequest) (*StopKaraokeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StopKaraoke not implemented")
}

func RegisterAnchorServiceServer(s *grpc.Server, srv AnchorServiceServer) {
	s.RegisterService(&_AnchorService_serviceDesc, srv)
}

func _AnchorService_FindOne_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindOneReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AnchorServiceServer).FindOne(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nonoapi.AnchorService/FindOne",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AnchorServiceServer).FindOne(ctx, req.(*FindOneReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AnchorService_FindOneWithCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindOneReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AnchorServiceServer).FindOneWithCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nonoapi.AnchorService/FindOneWithCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AnchorServiceServer).FindOneWithCache(ctx, req.(*FindOneReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AnchorService_FindList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AnchorServiceServer).FindList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nonoapi.AnchorService/FindList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AnchorServiceServer).FindList(ctx, req.(*FindListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AnchorService_FindListWithCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AnchorServiceServer).FindListWithCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nonoapi.AnchorService/FindListWithCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AnchorServiceServer).FindListWithCache(ctx, req.(*FindListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AnchorService_UpdateRoomDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AnchorServiceServer).UpdateRoomDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nonoapi.AnchorService/UpdateRoomDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AnchorServiceServer).UpdateRoomDetail(ctx, req.(*UpdateReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AnchorService_FindRoomDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindRoomDetailReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AnchorServiceServer).FindRoomDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nonoapi.AnchorService/FindRoomDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AnchorServiceServer).FindRoomDetail(ctx, req.(*FindRoomDetailReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AnchorService_FindRoomDetailWithCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindRoomDetailReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AnchorServiceServer).FindRoomDetailWithCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nonoapi.AnchorService/FindRoomDetailWithCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AnchorServiceServer).FindRoomDetailWithCache(ctx, req.(*FindRoomDetailReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AnchorService_FindRoomDetails_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindRoomDetailsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AnchorServiceServer).FindRoomDetails(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nonoapi.AnchorService/FindRoomDetails",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AnchorServiceServer).FindRoomDetails(ctx, req.(*FindRoomDetailsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AnchorService_LiveAnchorStopLive_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LiveAnchorStopLiveReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AnchorServiceServer).LiveAnchorStopLive(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nonoapi.AnchorService/LiveAnchorStopLive",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AnchorServiceServer).LiveAnchorStopLive(ctx, req.(*LiveAnchorStopLiveReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AnchorService_TransferLivePrepare_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TransferLivePrepareReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AnchorServiceServer).TransferLivePrepare(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nonoapi.AnchorService/TransferLivePrepare",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AnchorServiceServer).TransferLivePrepare(ctx, req.(*TransferLivePrepareReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AnchorService_TransferLiveCancel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TransferLiveCancelReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AnchorServiceServer).TransferLiveCancel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nonoapi.AnchorService/TransferLiveCancel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AnchorServiceServer).TransferLiveCancel(ctx, req.(*TransferLiveCancelReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AnchorService_TransferLiveStart_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TransferLiveStartReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AnchorServiceServer).TransferLiveStart(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nonoapi.AnchorService/TransferLiveStart",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AnchorServiceServer).TransferLiveStart(ctx, req.(*TransferLiveStartReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AnchorService_TransferLiveStop_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TransferLiveStopReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AnchorServiceServer).TransferLiveStop(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nonoapi.AnchorService/TransferLiveStop",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AnchorServiceServer).TransferLiveStop(ctx, req.(*TransferLiveStopReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AnchorService_TransferLiveStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TransferLiveStatusReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AnchorServiceServer).TransferLiveStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nonoapi.AnchorService/TransferLiveStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AnchorServiceServer).TransferLiveStatus(ctx, req.(*TransferLiveStatusReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AnchorService_TransferLiveStatusWithCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TransferLiveStatusReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AnchorServiceServer).TransferLiveStatusWithCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nonoapi.AnchorService/TransferLiveStatusWithCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AnchorServiceServer).TransferLiveStatusWithCache(ctx, req.(*TransferLiveStatusReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AnchorService_TransferLiveJoin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TransferLiveJoinReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AnchorServiceServer).TransferLiveJoin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nonoapi.AnchorService/TransferLiveJoin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AnchorServiceServer).TransferLiveJoin(ctx, req.(*TransferLiveJoinReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AnchorService_GetAllTransferLives_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllTransferLivesReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AnchorServiceServer).GetAllTransferLives(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nonoapi.AnchorService/GetAllTransferLives",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AnchorServiceServer).GetAllTransferLives(ctx, req.(*GetAllTransferLivesReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AnchorService_GetAllPrepareTransferLives_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllPrepareTransferLivesReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AnchorServiceServer).GetAllPrepareTransferLives(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nonoapi.AnchorService/GetAllPrepareTransferLives",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AnchorServiceServer).GetAllPrepareTransferLives(ctx, req.(*GetAllPrepareTransferLivesReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AnchorService_GetAllToHostTransferLives_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllToHostTransferLivesReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AnchorServiceServer).GetAllToHostTransferLives(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nonoapi.AnchorService/GetAllToHostTransferLives",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AnchorServiceServer).GetAllToHostTransferLives(ctx, req.(*GetAllToHostTransferLivesReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AnchorService_GetLiveAnchorsWithCache_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetLiveAnchorsWithCacheReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AnchorServiceServer).GetLiveAnchorsWithCache(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nonoapi.AnchorService/GetLiveAnchorsWithCache",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AnchorServiceServer).GetLiveAnchorsWithCache(ctx, req.(*GetLiveAnchorsWithCacheReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AnchorService_GetLiveAnchorsIds_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetLiveAnchorsIdsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AnchorServiceServer).GetLiveAnchorsIds(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nonoapi.AnchorService/GetLiveAnchorsIds",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AnchorServiceServer).GetLiveAnchorsIds(ctx, req.(*GetLiveAnchorsIdsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AnchorService_GetLiveAnchorsInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetLiveAnchorsInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AnchorServiceServer).GetLiveAnchorsInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nonoapi.AnchorService/GetLiveAnchorsInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AnchorServiceServer).GetLiveAnchorsInfo(ctx, req.(*GetLiveAnchorsInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AnchorService_StartLive_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StartLiveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AnchorServiceServer).StartLive(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nonoapi.AnchorService/StartLive",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AnchorServiceServer).StartLive(ctx, req.(*StartLiveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AnchorService_StopLive_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StopLiveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AnchorServiceServer).StopLive(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nonoapi.AnchorService/StopLive",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AnchorServiceServer).StopLive(ctx, req.(*StopLiveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AnchorService_RealtimePlaybackOn_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RealtimePlaybackOnReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AnchorServiceServer).RealtimePlaybackOn(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nonoapi.AnchorService/RealtimePlaybackOn",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AnchorServiceServer).RealtimePlaybackOn(ctx, req.(*RealtimePlaybackOnReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AnchorService_RealtimePlaybackOff_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RealtimePlaybackOffReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AnchorServiceServer).RealtimePlaybackOff(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nonoapi.AnchorService/RealtimePlaybackOff",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AnchorServiceServer).RealtimePlaybackOff(ctx, req.(*RealtimePlaybackOffReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AnchorService_GetLiveTransportResolution_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetLiveTransportResolutionReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AnchorServiceServer).GetLiveTransportResolution(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nonoapi.AnchorService/GetLiveTransportResolution",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AnchorServiceServer).GetLiveTransportResolution(ctx, req.(*GetLiveTransportResolutionReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AnchorService_KickStream_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KickStreamReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AnchorServiceServer).KickStream(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nonoapi.AnchorService/KickStream",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AnchorServiceServer).KickStream(ctx, req.(*KickStreamReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AnchorService_FindLiveAnchorMonth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindLiveAnchorMonthReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AnchorServiceServer).FindLiveAnchorMonth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nonoapi.AnchorService/FindLiveAnchorMonth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AnchorServiceServer).FindLiveAnchorMonth(ctx, req.(*FindLiveAnchorMonthReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AnchorService_FindLiveAnchorMonthCount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindLiveAnchorMonthCountReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AnchorServiceServer).FindLiveAnchorMonthCount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nonoapi.AnchorService/FindLiveAnchorMonthCount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AnchorServiceServer).FindLiveAnchorMonthCount(ctx, req.(*FindLiveAnchorMonthCountReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _AnchorService_StartKaraoke_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StartKaraokeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AnchorServiceServer).StartKaraoke(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nonoapi.AnchorService/StartKaraoke",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AnchorServiceServer).StartKaraoke(ctx, req.(*StartKaraokeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AnchorService_StopKaraoke_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StopKaraokeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AnchorServiceServer).StopKaraoke(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nonoapi.AnchorService/StopKaraoke",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AnchorServiceServer).StopKaraoke(ctx, req.(*StopKaraokeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AnchorService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "nonoapi.AnchorService",
	HandlerType: (*AnchorServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "FindOne",
			Handler:    _AnchorService_FindOne_Handler,
		},
		{
			MethodName: "FindOneWithCache",
			Handler:    _AnchorService_FindOneWithCache_Handler,
		},
		{
			MethodName: "FindList",
			Handler:    _AnchorService_FindList_Handler,
		},
		{
			MethodName: "FindListWithCache",
			Handler:    _AnchorService_FindListWithCache_Handler,
		},
		{
			MethodName: "UpdateRoomDetail",
			Handler:    _AnchorService_UpdateRoomDetail_Handler,
		},
		{
			MethodName: "FindRoomDetail",
			Handler:    _AnchorService_FindRoomDetail_Handler,
		},
		{
			MethodName: "FindRoomDetailWithCache",
			Handler:    _AnchorService_FindRoomDetailWithCache_Handler,
		},
		{
			MethodName: "FindRoomDetails",
			Handler:    _AnchorService_FindRoomDetails_Handler,
		},
		{
			MethodName: "LiveAnchorStopLive",
			Handler:    _AnchorService_LiveAnchorStopLive_Handler,
		},
		{
			MethodName: "TransferLivePrepare",
			Handler:    _AnchorService_TransferLivePrepare_Handler,
		},
		{
			MethodName: "TransferLiveCancel",
			Handler:    _AnchorService_TransferLiveCancel_Handler,
		},
		{
			MethodName: "TransferLiveStart",
			Handler:    _AnchorService_TransferLiveStart_Handler,
		},
		{
			MethodName: "TransferLiveStop",
			Handler:    _AnchorService_TransferLiveStop_Handler,
		},
		{
			MethodName: "TransferLiveStatus",
			Handler:    _AnchorService_TransferLiveStatus_Handler,
		},
		{
			MethodName: "TransferLiveStatusWithCache",
			Handler:    _AnchorService_TransferLiveStatusWithCache_Handler,
		},
		{
			MethodName: "TransferLiveJoin",
			Handler:    _AnchorService_TransferLiveJoin_Handler,
		},
		{
			MethodName: "GetAllTransferLives",
			Handler:    _AnchorService_GetAllTransferLives_Handler,
		},
		{
			MethodName: "GetAllPrepareTransferLives",
			Handler:    _AnchorService_GetAllPrepareTransferLives_Handler,
		},
		{
			MethodName: "GetAllToHostTransferLives",
			Handler:    _AnchorService_GetAllToHostTransferLives_Handler,
		},
		{
			MethodName: "GetLiveAnchorsWithCache",
			Handler:    _AnchorService_GetLiveAnchorsWithCache_Handler,
		},
		{
			MethodName: "GetLiveAnchorsIds",
			Handler:    _AnchorService_GetLiveAnchorsIds_Handler,
		},
		{
			MethodName: "GetLiveAnchorsInfo",
			Handler:    _AnchorService_GetLiveAnchorsInfo_Handler,
		},
		{
			MethodName: "StartLive",
			Handler:    _AnchorService_StartLive_Handler,
		},
		{
			MethodName: "StopLive",
			Handler:    _AnchorService_StopLive_Handler,
		},
		{
			MethodName: "RealtimePlaybackOn",
			Handler:    _AnchorService_RealtimePlaybackOn_Handler,
		},
		{
			MethodName: "RealtimePlaybackOff",
			Handler:    _AnchorService_RealtimePlaybackOff_Handler,
		},
		{
			MethodName: "GetLiveTransportResolution",
			Handler:    _AnchorService_GetLiveTransportResolution_Handler,
		},
		{
			MethodName: "KickStream",
			Handler:    _AnchorService_KickStream_Handler,
		},
		{
			MethodName: "FindLiveAnchorMonth",
			Handler:    _AnchorService_FindLiveAnchorMonth_Handler,
		},
		{
			MethodName: "FindLiveAnchorMonthCount",
			Handler:    _AnchorService_FindLiveAnchorMonthCount_Handler,
		},
		{
			MethodName: "StartKaraoke",
			Handler:    _AnchorService_StartKaraoke_Handler,
		},
		{
			MethodName: "StopKaraoke",
			Handler:    _AnchorService_StopKaraoke_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service.proto",
}
